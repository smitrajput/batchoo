{
  "contractName": "AuthKeyMetaTxAccount",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authKey",
          "type": "address"
        }
      ],
      "name": "AuthKeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authKey",
          "type": "address"
        }
      ],
      "name": "AuthKeyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "CallFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_authKey",
          "type": "address"
        }
      ],
      "name": "addAuthKey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authKeys",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_transactions",
          "type": "bytes[]"
        }
      ],
      "name": "executeMultipleMetaTransactions",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_authKey",
          "type": "address"
        }
      ],
      "name": "initializeV1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastInitializedVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numAuthKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_authKey",
          "type": "address"
        }
      ],
      "name": "removeAuthKey",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_transactions",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256",
          "name": "_gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasOverhead",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_feeTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeTokenRate",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_transactionMessageHashSignature",
          "type": "bytes"
        }
      ],
      "name": "executeMultipleAuthKeyMetaTransactions",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authKey\",\"type\":\"address\"}],\"name\":\"AuthKeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authKey\",\"type\":\"address\"}],\"name\":\"AuthKeyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"CallFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authKey\",\"type\":\"address\"}],\"name\":\"addAuthKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authKeys\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_transactions\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeTokenRate\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_transactionMessageHashSignature\",\"type\":\"bytes\"}],\"name\":\"executeMultipleAuthKeyMetaTransactions\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_transactions\",\"type\":\"bytes[]\"}],\"name\":\"executeMultipleMetaTransactions\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authKey\",\"type\":\"address\"}],\"name\":\"initializeV1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastInitializedVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numAuthKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authKey\",\"type\":\"address\"}],\"name\":\"removeAuthKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Authereum Labs, Inc.\",\"details\":\"Contract used by auth keys to send transactions.\",\"methods\":{\"addAuthKey(address)\":{\"details\":\"Add an auth key to the list of auth keys\",\"params\":{\"_authKey\":\"Address of the auth key to add\"}},\"executeMultipleAuthKeyMetaTransactions(bytes[],uint256,uint256,address,uint256,bytes)\":{\"details\":\"Execute multiple authKey meta transactions\",\"params\":{\"_feeTokenAddress\":\"Address of the token used to pay a fee\",\"_feeTokenRate\":\"Rate of the token (in tokenGasPrice/ethGasPrice) used to pay a fee\",\"_gasOverhead\":\"Gas overhead of the transaction calculated offchain\",\"_gasPrice\":\"Gas price set by the user\",\"_transactionMessageHashSignature\":\"Signed transaction data\",\"_transactions\":\"Arrays of transaction data ([destination, value, gasLimit, data][...]...)\"}},\"executeMultipleMetaTransactions(bytes[])\":{\"details\":\"Execute multiple meta transactions\",\"params\":{\"_transactions\":\"Arrays of transaction data ([destination, value, gasLimit, data][...]...)\"},\"return\":\"The responses of the calls\"},\"getChainId()\":{\"details\":\"Get the chain ID constant\",\"return\":\"The chain id\"},\"initializeV1(address)\":{\"details\":\"Initialize the Authereum Account\",\"params\":{\"_authKey\":\"authKey that will own this account\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated. This function MUST return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller. param _operator  The address which initiated the batch transfer (i.e. msg.sender) param _from      The address which previously owned the token param _ids       An array containing ids of each token being transferred (order and length must match _values array) param _values    An array containing amounts of each token being transferred (order and length must match _ids array) param _data      Additional data with no specified format\",\"return\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient after a {IERC721-safeTransferFrom}. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onERC721Received.selector`. This function MAY throw to revert and reject the transfer. Note: the ERC721 contract address is always the message sender. param operator The address which called `safeTransferFrom` function param from The address which previously owned the token param tokenId The NFT identifier which is being transferred param data Additional data with no specified format\",\"return\":\"bytes4 `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"},\"removeAuthKey(address)\":{\"details\":\"Remove an auth key from the list of auth keys\",\"params\":{\"_authKey\":\"Address of the auth key to remove\"}}},\"title\":\"AuthKeyMetaTxAccount\"},\"userdoc\":{\"methods\":{\"executeMultipleMetaTransactions(bytes[])\":{\"notice\":\"This can only be called by self as a part of the atomic meta transaction\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"ERC1155\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/smitrajput/Projects/batchoo/contracts/account/AuthKeyMetaTxAccount.sol\":\"AuthKeyMetaTxAccount\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/smitrajput/Projects/batchoo/contracts/account/AuthKeyMetaTxAccount.sol\":{\"keccak256\":\"0x4a4e1a79df52b61ec497c6f4c2edf9239d8c193f28d9eca6ff667191e91c60f7\",\"urls\":[\"bzz-raw://7d40ca8fb422b6a46808e324e8a0d1325b6f00fb72fe9d983b9a17dc5cf080fe\",\"dweb:/ipfs/Qmcs3ExPN8xg1z6Jf2rWQ89fBUhQU99LKSMLwaYjfQkuXk\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/BaseAccount.sol\":{\"keccak256\":\"0x8ad4a06b7100bdf459e37864eb1ee68d0102a007ecf2ffe6431f3d1ae8b09052\",\"urls\":[\"bzz-raw://10b3253c6bd5b5b9839cac90fd976eed33d8542e81ffa0049e62ad75e8979ffc\",\"dweb:/ipfs/QmXbneYhRs5VJPWuhwk3Eb6FNfzCZVHQ9eBMoZSL4Hi73a\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/BaseMetaTxAccount.sol\":{\"keccak256\":\"0x62527eb4672bd29d265fdfbf7c8cd0a8fbcf5247a0878b5c608e5144c407fac1\",\"urls\":[\"bzz-raw://cb184c8f36e92eddda897084c6e7e012f5383a082135b862dc9506fb24663b8d\",\"dweb:/ipfs/QmSGFPfrRxaFV8X4SmGKoTLRLPuTBAeLB5x2yV8mxaimai\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/TokenReceiverHooks.sol\":{\"keccak256\":\"0xfc484ff2dfc39abebdcb357e7e6099d7d57c0d5d7075791e9b38f692c54de59c\",\"urls\":[\"bzz-raw://a2ceddc7ebed66d28facbf00acc3564cfd34eac3a6c1a02649d30178a145c3af\",\"dweb:/ipfs/QmdT4mm75zrqK6nRhUQBm3pcy7B4ZucExaxh1Uppqv5329\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/event/AccountEvents.sol\":{\"keccak256\":\"0xb88871c8b07c27aec8f493de3c73d440a01e27e46eb9b85a6696ce27c50c82a5\",\"urls\":[\"bzz-raw://fb1469cc7188640ebafe5bca2318d8d8b73bd05e46956a73f171c0732fe10aac\",\"dweb:/ipfs/QmQtYPiotT3ZKAbnXTU4y4Z7KXwU9VsftkmPCfeC8dQiA4\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/initializer/AccountInitialize.sol\":{\"keccak256\":\"0x69573723ecdf4323c22f6c145f97810352c81b27639f86d42cf3ca0c414886f1\",\"urls\":[\"bzz-raw://8d928b7db59ad835e2e55a8adfb6b02b52b81af9ab7a5d3299a1fb8e14849955\",\"dweb:/ipfs/QmcQi3ciGDXGXTnMJyxZCjHDcRFg1u7gV7mpEpcqWTHGSM\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/initializer/AccountInitializeV1.sol\":{\"keccak256\":\"0x7f049747e85e1673a04cf037e1be96b498666c48c166eef06271ed86d9693931\",\"urls\":[\"bzz-raw://488024e7f26f01b4953f3a71b4b01534d0a063bce7b076ae93c5be63eac91e9f\",\"dweb:/ipfs/QmNa8Rwjo7bCivtAuLEU8KnHmSyTFi2sRZAqY7JGWrj1mn\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/state/AccountState.sol\":{\"keccak256\":\"0x4ca8d2bc1ad7812ed5888c4e1360eb2149da0e78f198bcd9fc9705f78cbe603d\",\"urls\":[\"bzz-raw://45bdb52eb3b30d1b426e9b2b5f5e3da649639ce11ea7e38db6ae4be960377822\",\"dweb:/ipfs/Qma65bYE7ZA7K5XQduyriSwP9ojNjBnYXg74HBMsc3XmVt\"]},\"/Users/smitrajput/Projects/batchoo/contracts/account/state/AccountStateV1.sol\":{\"keccak256\":\"0xcfb4767ffef498abc93d41400207c2ffcaec8c6aee6098da9cd4efa0386911c4\",\"urls\":[\"bzz-raw://74aa89ee35c7fad5569ce484c309e53fec22f3fb3bffb0365332d597ef043b57\",\"dweb:/ipfs/QmYMNQtds3mhuSX4erkSHasz8dDtP8PtrS1P7wBQbU8on7\"]},\"/Users/smitrajput/Projects/batchoo/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x3db6cbbf8ef683147641faf93c5f0b7ab41aedb9950a6a319c3015799e52a6e8\",\"urls\":[\"bzz-raw://58d239c5418120adda4acd4a61e9f197cb81045f1ac47c65453b6ed60e1ccbe4\",\"dweb:/ipfs/QmWw4vBFv66ZS5AbJBPVGAhUNk3smzaV5nWGQAsRJypCTX\"]},\"/Users/smitrajput/Projects/batchoo/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x3f00a7e6d0e6254ae96b6062ef1c352ddbb2e8d6644a5d7a21be45ecef43e13c\",\"urls\":[\"bzz-raw://8b080464c50e1bb1cf5201ef9f41526dcc29fce06badf1e8c88015bb7d0c1dcb\",\"dweb:/ipfs/QmT4ivFgfrSfkZyJ3wGTwUsqeUnuDc1WerLEHE2Dkf8J6G\"]},\"/Users/smitrajput/Projects/batchoo/contracts/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0x69c677cf012bf6e5fbea6ed78f26e8e40983b074339db39e3cb1ac1bc4685e7a\",\"urls\":[\"bzz-raw://6af831574994f5ed390de2722d31a09c70c61515968e40fc64b10e97d7517fc0\",\"dweb:/ipfs/QmX8NANwX7sJWBiddEVzU6vnENXcnoWvatiDhtZdqFhv6R\"]},\"/Users/smitrajput/Projects/batchoo/contracts/libs/BytesLib.sol\":{\"keccak256\":\"0xde793835499803e9a2b59683de8bca5b77e2c4dc63748cf8b72973193e65e656\",\"urls\":[\"bzz-raw://736c496152ca418b2716489383a753cddf723707679e5e5f1ae27f07d1c288b4\",\"dweb:/ipfs/QmXeZ45curYeCpaCwkM9Qz2FCFLG9JNG4ReLKmaru5LJ4P\"]},\"/Users/smitrajput/Projects/batchoo/contracts/libs/ECDSA.sol\":{\"keccak256\":\"0x3ebcc8a3b500db4b2a4bf8b4f1719d72e1e47343011b545c5de2c557e03d6f30\",\"urls\":[\"bzz-raw://1360181cb8498d2cdb9456ee40e920d21a0507e311c007e741229e792259fe8e\",\"dweb:/ipfs/QmaeaJcwWXSNaQjP6sW9hNTYh6Bmz79mxwqFyioVZEaqeT\"]},\"/Users/smitrajput/Projects/batchoo/contracts/libs/SafeMath.sol\":{\"keccak256\":\"0x39727fd836bd263b0742b8802723f93e76a5f6220326bbffce47918a85c13188\",\"urls\":[\"bzz-raw://46651dc4e440f916eea05093e512f6e94b8ab5610efc0c6221638a243afacab3\",\"dweb:/ipfs/QmdQNPYMt9auxR2zEXz88hAR2Cznfft1XyMNnokWpjJtVr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612948806100206000396000f3fe6080604052600436106100c25760003560e01c8063792c891f1161007f578063affed0e011610059578063affed0e014610289578063bc197c81146102b4578063ec5e319e146102f1578063f23a6e611461031c576100c2565b8063792c891f146101f85780637e7fd66c146102355780639565389e14610260576100c2565b806313f8c578146100c4578063150b7a02146100ed5780631b9a9f9e1461012a57806326aa4655146101535780633408e470146101905780635175ca5e146101bb575b005b3480156100d057600080fd5b506100eb60048036036100e69190810190611883565b610359565b005b3480156100f957600080fd5b50610114600480360361010f91908101906119f3565b610518565b604051610121919061240d565b60405180910390f35b34801561013657600080fd5b50610151600480360361014c9190810190611883565b61052c565b005b34801561015f57600080fd5b5061017a60048036036101759190810190611b82565b610626565b604051610187919061238b565b60405180910390f35b34801561019c57600080fd5b506101a56106e5565b6040516101b291906125aa565b60405180910390f35b3480156101c757600080fd5b506101e260048036036101dd9190810190611883565b6106ee565b6040516101ef91906123ad565b60405180910390f35b34801561020457600080fd5b5061021f600480360361021a9190810190611b41565b61070e565b60405161022c919061238b565b60405180910390f35b34801561024157600080fd5b5061024a61079e565b60405161025791906125aa565b60405180910390f35b34801561026c57600080fd5b5061028760048036036102829190810190611883565b6107a4565b005b34801561029557600080fd5b5061029e6109a9565b6040516102ab91906125aa565b60405180910390f35b3480156102c057600080fd5b506102db60048036036102d69190810190611927565b6109af565b6040516102e8919061240d565b60405180910390f35b3480156102fd57600080fd5b506103066109c7565b60405161031391906125aa565b60405180910390f35b34801561032857600080fd5b50610343600480360361033e9190810190611a6e565b6109cd565b604051610350919061240d565b60405180910390f35b610362336109e3565b8061039857503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce9061252a565b60405180910390fd5b60001515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461046a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104619061254a565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600082825401925050819055508073ffffffffffffffffffffffffffffffffffffffff167fb020719d16d3c4de45a91f9c329aa61d5bad3f44f760840c8d5d82d4cd3bcc3360405160405180910390a250565b600063150b7a0260e01b9050949350505050565b6000805414610570576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610567906124ea565b60405180910390fd5b600160008190555060018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600082825401925050819055508073ffffffffffffffffffffffffffffffffffffffff167fb020719d16d3c4de45a91f9c329aa61d5bad3f44f760840c8d5d82d4cd3bcc3360405160405180910390a250565b606060005a9050600061069b306000357fffffffff00000000000000000000000000000000000000000000000000000000166106606106e5565b6002548d8d8d8d8d604051602001610680999897969594939291906122ce565b60405160208183030381529060405280519060200120610a39565b90506106a78185610a69565b60606106b68a8a8a8a8a610acd565b9150506106c28a610cfc565b156106d5576106d4838a8a8a8a610d8b565b5b8093505050509695505050505050565b60006001905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6060610719336109e3565b8061074f57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107859061252a565b60405180910390fd5b61079782611040565b9050919050565b60005481565b6107ad336109e3565b806107e357503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061252a565b60405180910390fd5b60011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac9061256a565b60405180910390fd5b6001600354116108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f1906124ca565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600082825403925050819055508073ffffffffffffffffffffffffffffffffffffffff167fbe55f9add9abe657e689a4a84a31854310f260c7e2610bcd22440e3ec3a836a460405160405180910390a250565b60025481565b600063bc197c8160e01b905098975050505050505050565b60035481565b600063f23a6e6160e01b90509695505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600081604051602001610a4c9190612278565b604051602081830303815290604052805190602001209050919050565b6000610a7e82846110d490919063ffffffff16565b9050610a89816109e3565b610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abf906124aa565b60405180910390fd5b505050565b600060603a861115610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b9061244a565b60405180910390fd5b6000610b82306000357fffffffff0000000000000000000000000000000000000000000000000000000016610b476106e5565b6002548c8c8c8c8c604051602001610b67999897969594939291906122ce565b60405160208183030381529060405280519060200120610a39565b90508751600260008282540192505081905550606063792c891f60e01b89604051602401610bb0919061238b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600060603073ffffffffffffffffffffffffffffffffffffffff1683604051610c389190612261565b6000604051808303816000865af19150503d8060008114610c75576040519150601f19603f3d011682016040523d82523d6000602084013e610c7a565b606091505b5091509150606082610cd0576060610c91836111c0565b90507fb5e1dc2ddc0e1a0221e00b3c0446f36b707001d3ac7cfb494259863fdef7ccd781604051610cc29190612428565b60405180910390a150610ce7565b81806020019051610ce49190810190611b00565b90505b84819650965050505050509550959350505050565b60008060008090505b8351811015610d7f57610d2a848281518110610d1d57fe5b6020026020010151611226565b909150905050809250503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610d7257600192505050610d86565b8080600101915050610d05565b5060009150505b919050565b6000610db284610da45a8961125690919063ffffffff16565b6112a090919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ebe5747610dfd86836112f590919063ffffffff16565b1115610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e359061246a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16610e6886836112f590919063ffffffff16565b604051610e749061229e565b60006040518083038185875af1925050503d8060008114610eb1576040519150601f19603f3d011682016040523d82523d6000602084013e610eb6565b606091505b505050611038565b60008390506000610ed884846112f590919063ffffffff16565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f1391906122b3565b602060405180830381600087803b158015610f2d57600080fd5b505af1158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f659190810190611ca5565b811115610fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9e9061258a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610fe2929190612362565b602060405180830381600087803b158015610ffc57600080fd5b505af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110349190810190611c3b565b5050505b505050505050565b606080825160405190808252806020026020018201604052801561107857816020015b60608152602001906001900390816110635790505b50905060008090505b83518110156110ca576110a684828151811061109957fe5b6020026020010151611365565b8282815181106110b257fe5b60200260200101819052508080600101915050611081565b5080915050919050565b600060418251146110e857600090506111ba565b60008060006020850151925060408501519150606085015160001a90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c111561113c57600093505050506111ba565b601b8160ff16141580156111545750601c8160ff1614155b1561116557600093505050506111ba565b6001868285856040516000815260200160405260405161118894939291906123c8565b6020604051602081039080840390855afa1580156111aa573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b60606044825110156111ec576040518060600160405280602181526020016128e5602191399050611221565b6060611207600480855103856113969092919063ffffffff16565b90508080602001905161121d9190810190611c64565b9150505b919050565b600080600060608480602001905161124191908101906118ac565b83935080905093509350935093509193509193565b600061129883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611422565b905092915050565b6000808284019050838110156112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e29061248a565b60405180910390fd5b8091505092915050565b600080831415611308576000905061135f565b600082840290508284828161131957fe5b041461135a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113519061250a565b60405180910390fd5b809150505b92915050565b60606000806000606061137786611226565b935093509350935061138b8484848461147d565b945050505050919050565b6060818301845110156113a857600080fd5b60608215600081146113c557604051915060208201604052611416565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561140357805183526020830192506020810190506113e6565b50868552601f19601f8301166040525050505b50809150509392505050565b600083831115829061146a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114619190612428565b60405180910390fd5b5060008385039050809150509392505050565b6060600060608673ffffffffffffffffffffffffffffffffffffffff168587866040516114aa9190612261565b600060405180830381858888f193505050503d80600081146114e8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ed565b606091505b509150915081611541576060611502826111c0565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115389190612428565b60405180910390fd5b8092505050949350505050565b60008135905061155d81612888565b92915050565b6000815190506115728161289f565b92915050565b600082601f83011261158957600080fd5b815161159c611597826125f2565b6125c5565b9150818183526020840193506020810190508360005b838110156115e257815186016115c8888261175d565b8452602084019350602083019250506001810190506115b2565b5050505092915050565b600082601f8301126115fd57600080fd5b813561161061160b8261261a565b6125c5565b9150818183526020840193506020810190508360005b83811015611656578135860161163c8882611709565b845260208401935060208301925050600181019050611626565b5050505092915050565b60008083601f84011261167257600080fd5b8235905067ffffffffffffffff81111561168b57600080fd5b6020830191508360208202830111156116a357600080fd5b9250929050565b6000815190506116b9816128b6565b92915050565b60008083601f8401126116d157600080fd5b8235905067ffffffffffffffff8111156116ea57600080fd5b60208301915083600182028301111561170257600080fd5b9250929050565b600082601f83011261171a57600080fd5b813561172d61172882612642565b6125c5565b9150808252602083016020830185838301111561174957600080fd5b61175483828461282b565b50505092915050565b600082601f83011261176e57600080fd5b815161178161177c82612642565b6125c5565b9150808252602083016020830185838301111561179d57600080fd5b6117a883828461283a565b50505092915050565b600082601f8301126117c257600080fd5b81356117d56117d08261266e565b6125c5565b915080825260208301602083018583830111156117f157600080fd5b6117fc83828461282b565b50505092915050565b600082601f83011261181657600080fd5b81516118296118248261269a565b6125c5565b9150808252602083016020830185838301111561184557600080fd5b61185083828461283a565b50505092915050565b600081359050611868816128cd565b92915050565b60008151905061187d816128cd565b92915050565b60006020828403121561189557600080fd5b60006118a38482850161154e565b91505092915050565b600080600080608085870312156118c257600080fd5b60006118d087828801611563565b94505060206118e18782880161186e565b93505060406118f28782880161186e565b925050606085015167ffffffffffffffff81111561190f57600080fd5b61191b8782880161175d565b91505092959194509250565b60008060008060008060008060a0898b03121561194357600080fd5b60006119518b828c0161154e565b98505060206119628b828c0161154e565b975050604089013567ffffffffffffffff81111561197f57600080fd5b61198b8b828c01611660565b9650965050606089013567ffffffffffffffff8111156119aa57600080fd5b6119b68b828c01611660565b9450945050608089013567ffffffffffffffff8111156119d557600080fd5b6119e18b828c016116bf565b92509250509295985092959890939650565b60008060008060808587031215611a0957600080fd5b6000611a178782880161154e565b9450506020611a288782880161154e565b9350506040611a3987828801611859565b925050606085013567ffffffffffffffff811115611a5657600080fd5b611a62878288016117b1565b91505092959194509250565b60008060008060008060a08789031215611a8757600080fd5b6000611a9589828a0161154e565b9650506020611aa689828a0161154e565b9550506040611ab789828a01611859565b9450506060611ac889828a01611859565b935050608087013567ffffffffffffffff811115611ae557600080fd5b611af189828a016116bf565b92509250509295509295509295565b600060208284031215611b1257600080fd5b600082015167ffffffffffffffff811115611b2c57600080fd5b611b3884828501611578565b91505092915050565b600060208284031215611b5357600080fd5b600082013567ffffffffffffffff811115611b6d57600080fd5b611b79848285016115ec565b91505092915050565b60008060008060008060c08789031215611b9b57600080fd5b600087013567ffffffffffffffff811115611bb557600080fd5b611bc189828a016115ec565b9650506020611bd289828a01611859565b9550506040611be389828a01611859565b9450506060611bf489828a0161154e565b9350506080611c0589828a01611859565b92505060a087013567ffffffffffffffff811115611c2257600080fd5b611c2e89828a016117b1565b9150509295509295509295565b600060208284031215611c4d57600080fd5b6000611c5b848285016116aa565b91505092915050565b600060208284031215611c7657600080fd5b600082015167ffffffffffffffff811115611c9057600080fd5b611c9c84828501611805565b91505092915050565b600060208284031215611cb757600080fd5b6000611cc58482850161186e565b91505092915050565b6000611cda8383611df9565b905092915050565b611ceb816127f5565b82525050565b611cfa8161276a565b82525050565b611d0981612758565b82525050565b6000611d1a826126d6565b611d24818561270f565b935083602082028501611d36856126c6565b8060005b85811015611d725784840389528151611d538582611cce565b9450611d5e83612702565b925060208a01995050600181019050611d3a565b50829750879550505050505092915050565b611d8d8161277c565b82525050565b611d9c81612788565b82525050565b611db3611dae82612788565b61286d565b82525050565b611dc281612792565b82525050565b6000611dd3826126ec565b611ddd8185612731565b9350611ded81856020860161283a565b80840191505092915050565b6000611e04826126e1565b611e0e8185612720565b9350611e1e81856020860161283a565b611e2781612877565b840191505092915050565b6000611e3d826126f7565b611e47818561273c565b9350611e5781856020860161283a565b611e6081612877565b840191505092915050565b6000611e7860248361273c565b91507f424d54413a204e6f742061206c6172676520656e6f7567682074782e6761737060008301527f72696365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ede601c8361274d565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000611f1e60258361273c565b91507f42413a20496e73756666696369656e742067617320284554482920666f72207260008301527f6566756e640000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f84601b8361273c565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000611fc4601a8361273c565b91507f414b4d54413a2041757468206b657920697320696e76616c69640000000000006000830152602082019050919050565b6000612004601f8361273c565b91507f42413a2043616e6e6f742072656d6f7665206c6173742061757468206b6579006000830152602082019050919050565b600061204460218361273c565b91507f41493a20496d70726f70657220696e697469616c697a6174696f6e206f72646560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120aa60218361273c565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612110601f8361273c565b91507f42413a2041757468206b6579206f722073656c6620697320696e76616c6964006000830152602082019050919050565b6000612150600083612731565b9150600082019050919050565b600061216a601a8361273c565b91507f42413a2041757468206b657920616c72656164792061646465640000000000006000830152602082019050919050565b60006121aa601a8361273c565b91507f42413a2041757468206b6579206e6f74207965742061646465640000000000006000830152602082019050919050565b60006121ea60278361273c565b91507f42413a20496e73756666696369656e74206761732028746f6b656e2920666f7260008301527f20726566756e64000000000000000000000000000000000000000000000000006020830152604082019050919050565b61224c816127de565b82525050565b61225b816127e8565b82525050565b600061226d8284611dc8565b915081905092915050565b600061228382611ed1565b915061228f8284611da2565b60208201915081905092915050565b60006122a982612143565b9150819050919050565b60006020820190506122c86000830184611ce2565b92915050565b6000610120820190506122e4600083018c611cf1565b6122f1602083018b611db9565b6122fe604083018a612243565b61230b6060830189612243565b818103608083015261231d8188611d0f565b905061232c60a0830187612243565b61233960c0830186612243565b61234660e0830185611d00565b612354610100830184612243565b9a9950505050505050505050565b60006040820190506123776000830185611ce2565b6123846020830184612243565b9392505050565b600060208201905081810360008301526123a58184611d0f565b905092915050565b60006020820190506123c26000830184611d84565b92915050565b60006080820190506123dd6000830187611d93565b6123ea6020830186612252565b6123f76040830185611d93565b6124046060830184611d93565b95945050505050565b60006020820190506124226000830184611db9565b92915050565b600060208201905081810360008301526124428184611e32565b905092915050565b6000602082019050818103600083015261246381611e6b565b9050919050565b6000602082019050818103600083015261248381611f11565b9050919050565b600060208201905081810360008301526124a381611f77565b9050919050565b600060208201905081810360008301526124c381611fb7565b9050919050565b600060208201905081810360008301526124e381611ff7565b9050919050565b6000602082019050818103600083015261250381612037565b9050919050565b600060208201905081810360008301526125238161209d565b9050919050565b6000602082019050818103600083015261254381612103565b9050919050565b600060208201905081810360008301526125638161215d565b9050919050565b600060208201905081810360008301526125838161219d565b9050919050565b600060208201905081810360008301526125a3816121dd565b9050919050565b60006020820190506125bf6000830184612243565b92915050565b6000604051905081810181811067ffffffffffffffff821117156125e857600080fd5b8060405250919050565b600067ffffffffffffffff82111561260957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561263157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561265957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561268557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156126b157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612763826127be565b9050919050565b6000612775826127be565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061280082612807565b9050919050565b600061281282612819565b9050919050565b6000612824826127be565b9050919050565b82818337600083830152505050565b60005b8381101561285857808201518184015260208101905061283d565b83811115612867576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61289181612758565b811461289c57600080fd5b50565b6128a88161276a565b81146128b357600080fd5b50565b6128bf8161277c565b81146128ca57600080fd5b50565b6128d6816127de565b81146128e157600080fd5b5056fe42413a205472616e73616374696f6e2072657665727465642073696c656e746c79a365627a7a723158205bb3953a062e1796888c36389d5d4be8f01e82607f9edba4c790f3fce498658b6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063792c891f1161007f578063affed0e011610059578063affed0e014610289578063bc197c81146102b4578063ec5e319e146102f1578063f23a6e611461031c576100c2565b8063792c891f146101f85780637e7fd66c146102355780639565389e14610260576100c2565b806313f8c578146100c4578063150b7a02146100ed5780631b9a9f9e1461012a57806326aa4655146101535780633408e470146101905780635175ca5e146101bb575b005b3480156100d057600080fd5b506100eb60048036036100e69190810190611883565b610359565b005b3480156100f957600080fd5b50610114600480360361010f91908101906119f3565b610518565b604051610121919061240d565b60405180910390f35b34801561013657600080fd5b50610151600480360361014c9190810190611883565b61052c565b005b34801561015f57600080fd5b5061017a60048036036101759190810190611b82565b610626565b604051610187919061238b565b60405180910390f35b34801561019c57600080fd5b506101a56106e5565b6040516101b291906125aa565b60405180910390f35b3480156101c757600080fd5b506101e260048036036101dd9190810190611883565b6106ee565b6040516101ef91906123ad565b60405180910390f35b34801561020457600080fd5b5061021f600480360361021a9190810190611b41565b61070e565b60405161022c919061238b565b60405180910390f35b34801561024157600080fd5b5061024a61079e565b60405161025791906125aa565b60405180910390f35b34801561026c57600080fd5b5061028760048036036102829190810190611883565b6107a4565b005b34801561029557600080fd5b5061029e6109a9565b6040516102ab91906125aa565b60405180910390f35b3480156102c057600080fd5b506102db60048036036102d69190810190611927565b6109af565b6040516102e8919061240d565b60405180910390f35b3480156102fd57600080fd5b506103066109c7565b60405161031391906125aa565b60405180910390f35b34801561032857600080fd5b50610343600480360361033e9190810190611a6e565b6109cd565b604051610350919061240d565b60405180910390f35b610362336109e3565b8061039857503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce9061252a565b60405180910390fd5b60001515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461046a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104619061254a565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600082825401925050819055508073ffffffffffffffffffffffffffffffffffffffff167fb020719d16d3c4de45a91f9c329aa61d5bad3f44f760840c8d5d82d4cd3bcc3360405160405180910390a250565b600063150b7a0260e01b9050949350505050565b6000805414610570576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610567906124ea565b60405180910390fd5b600160008190555060018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600082825401925050819055508073ffffffffffffffffffffffffffffffffffffffff167fb020719d16d3c4de45a91f9c329aa61d5bad3f44f760840c8d5d82d4cd3bcc3360405160405180910390a250565b606060005a9050600061069b306000357fffffffff00000000000000000000000000000000000000000000000000000000166106606106e5565b6002548d8d8d8d8d604051602001610680999897969594939291906122ce565b60405160208183030381529060405280519060200120610a39565b90506106a78185610a69565b60606106b68a8a8a8a8a610acd565b9150506106c28a610cfc565b156106d5576106d4838a8a8a8a610d8b565b5b8093505050509695505050505050565b60006001905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6060610719336109e3565b8061074f57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61078e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107859061252a565b60405180910390fd5b61079782611040565b9050919050565b60005481565b6107ad336109e3565b806107e357503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061252a565b60405180910390fd5b60011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146108b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ac9061256a565b60405180910390fd5b6001600354116108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f1906124ca565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600082825403925050819055508073ffffffffffffffffffffffffffffffffffffffff167fbe55f9add9abe657e689a4a84a31854310f260c7e2610bcd22440e3ec3a836a460405160405180910390a250565b60025481565b600063bc197c8160e01b905098975050505050505050565b60035481565b600063f23a6e6160e01b90509695505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600081604051602001610a4c9190612278565b604051602081830303815290604052805190602001209050919050565b6000610a7e82846110d490919063ffffffff16565b9050610a89816109e3565b610ac8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abf906124aa565b60405180910390fd5b505050565b600060603a861115610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b9061244a565b60405180910390fd5b6000610b82306000357fffffffff0000000000000000000000000000000000000000000000000000000016610b476106e5565b6002548c8c8c8c8c604051602001610b67999897969594939291906122ce565b60405160208183030381529060405280519060200120610a39565b90508751600260008282540192505081905550606063792c891f60e01b89604051602401610bb0919061238b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600060603073ffffffffffffffffffffffffffffffffffffffff1683604051610c389190612261565b6000604051808303816000865af19150503d8060008114610c75576040519150601f19603f3d011682016040523d82523d6000602084013e610c7a565b606091505b5091509150606082610cd0576060610c91836111c0565b90507fb5e1dc2ddc0e1a0221e00b3c0446f36b707001d3ac7cfb494259863fdef7ccd781604051610cc29190612428565b60405180910390a150610ce7565b81806020019051610ce49190810190611b00565b90505b84819650965050505050509550959350505050565b60008060008090505b8351811015610d7f57610d2a848281518110610d1d57fe5b6020026020010151611226565b909150905050809250503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610d7257600192505050610d86565b8080600101915050610d05565b5060009150505b919050565b6000610db284610da45a8961125690919063ffffffff16565b6112a090919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ebe5747610dfd86836112f590919063ffffffff16565b1115610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e359061246a565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16610e6886836112f590919063ffffffff16565b604051610e749061229e565b60006040518083038185875af1925050503d8060008114610eb1576040519150601f19603f3d011682016040523d82523d6000602084013e610eb6565b606091505b505050611038565b60008390506000610ed884846112f590919063ffffffff16565b90508173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f1391906122b3565b602060405180830381600087803b158015610f2d57600080fd5b505af1158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f659190810190611ca5565b811115610fa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9e9061258a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610fe2929190612362565b602060405180830381600087803b158015610ffc57600080fd5b505af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110349190810190611c3b565b5050505b505050505050565b606080825160405190808252806020026020018201604052801561107857816020015b60608152602001906001900390816110635790505b50905060008090505b83518110156110ca576110a684828151811061109957fe5b6020026020010151611365565b8282815181106110b257fe5b60200260200101819052508080600101915050611081565b5080915050919050565b600060418251146110e857600090506111ba565b60008060006020850151925060408501519150606085015160001a90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c111561113c57600093505050506111ba565b601b8160ff16141580156111545750601c8160ff1614155b1561116557600093505050506111ba565b6001868285856040516000815260200160405260405161118894939291906123c8565b6020604051602081039080840390855afa1580156111aa573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b60606044825110156111ec576040518060600160405280602181526020016128e5602191399050611221565b6060611207600480855103856113969092919063ffffffff16565b90508080602001905161121d9190810190611c64565b9150505b919050565b600080600060608480602001905161124191908101906118ac565b83935080905093509350935093509193509193565b600061129883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611422565b905092915050565b6000808284019050838110156112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e29061248a565b60405180910390fd5b8091505092915050565b600080831415611308576000905061135f565b600082840290508284828161131957fe5b041461135a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113519061250a565b60405180910390fd5b809150505b92915050565b60606000806000606061137786611226565b935093509350935061138b8484848461147d565b945050505050919050565b6060818301845110156113a857600080fd5b60608215600081146113c557604051915060208201604052611416565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561140357805183526020830192506020810190506113e6565b50868552601f19601f8301166040525050505b50809150509392505050565b600083831115829061146a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114619190612428565b60405180910390fd5b5060008385039050809150509392505050565b6060600060608673ffffffffffffffffffffffffffffffffffffffff168587866040516114aa9190612261565b600060405180830381858888f193505050503d80600081146114e8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ed565b606091505b509150915081611541576060611502826111c0565b9050806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115389190612428565b60405180910390fd5b8092505050949350505050565b60008135905061155d81612888565b92915050565b6000815190506115728161289f565b92915050565b600082601f83011261158957600080fd5b815161159c611597826125f2565b6125c5565b9150818183526020840193506020810190508360005b838110156115e257815186016115c8888261175d565b8452602084019350602083019250506001810190506115b2565b5050505092915050565b600082601f8301126115fd57600080fd5b813561161061160b8261261a565b6125c5565b9150818183526020840193506020810190508360005b83811015611656578135860161163c8882611709565b845260208401935060208301925050600181019050611626565b5050505092915050565b60008083601f84011261167257600080fd5b8235905067ffffffffffffffff81111561168b57600080fd5b6020830191508360208202830111156116a357600080fd5b9250929050565b6000815190506116b9816128b6565b92915050565b60008083601f8401126116d157600080fd5b8235905067ffffffffffffffff8111156116ea57600080fd5b60208301915083600182028301111561170257600080fd5b9250929050565b600082601f83011261171a57600080fd5b813561172d61172882612642565b6125c5565b9150808252602083016020830185838301111561174957600080fd5b61175483828461282b565b50505092915050565b600082601f83011261176e57600080fd5b815161178161177c82612642565b6125c5565b9150808252602083016020830185838301111561179d57600080fd5b6117a883828461283a565b50505092915050565b600082601f8301126117c257600080fd5b81356117d56117d08261266e565b6125c5565b915080825260208301602083018583830111156117f157600080fd5b6117fc83828461282b565b50505092915050565b600082601f83011261181657600080fd5b81516118296118248261269a565b6125c5565b9150808252602083016020830185838301111561184557600080fd5b61185083828461283a565b50505092915050565b600081359050611868816128cd565b92915050565b60008151905061187d816128cd565b92915050565b60006020828403121561189557600080fd5b60006118a38482850161154e565b91505092915050565b600080600080608085870312156118c257600080fd5b60006118d087828801611563565b94505060206118e18782880161186e565b93505060406118f28782880161186e565b925050606085015167ffffffffffffffff81111561190f57600080fd5b61191b8782880161175d565b91505092959194509250565b60008060008060008060008060a0898b03121561194357600080fd5b60006119518b828c0161154e565b98505060206119628b828c0161154e565b975050604089013567ffffffffffffffff81111561197f57600080fd5b61198b8b828c01611660565b9650965050606089013567ffffffffffffffff8111156119aa57600080fd5b6119b68b828c01611660565b9450945050608089013567ffffffffffffffff8111156119d557600080fd5b6119e18b828c016116bf565b92509250509295985092959890939650565b60008060008060808587031215611a0957600080fd5b6000611a178782880161154e565b9450506020611a288782880161154e565b9350506040611a3987828801611859565b925050606085013567ffffffffffffffff811115611a5657600080fd5b611a62878288016117b1565b91505092959194509250565b60008060008060008060a08789031215611a8757600080fd5b6000611a9589828a0161154e565b9650506020611aa689828a0161154e565b9550506040611ab789828a01611859565b9450506060611ac889828a01611859565b935050608087013567ffffffffffffffff811115611ae557600080fd5b611af189828a016116bf565b92509250509295509295509295565b600060208284031215611b1257600080fd5b600082015167ffffffffffffffff811115611b2c57600080fd5b611b3884828501611578565b91505092915050565b600060208284031215611b5357600080fd5b600082013567ffffffffffffffff811115611b6d57600080fd5b611b79848285016115ec565b91505092915050565b60008060008060008060c08789031215611b9b57600080fd5b600087013567ffffffffffffffff811115611bb557600080fd5b611bc189828a016115ec565b9650506020611bd289828a01611859565b9550506040611be389828a01611859565b9450506060611bf489828a0161154e565b9350506080611c0589828a01611859565b92505060a087013567ffffffffffffffff811115611c2257600080fd5b611c2e89828a016117b1565b9150509295509295509295565b600060208284031215611c4d57600080fd5b6000611c5b848285016116aa565b91505092915050565b600060208284031215611c7657600080fd5b600082015167ffffffffffffffff811115611c9057600080fd5b611c9c84828501611805565b91505092915050565b600060208284031215611cb757600080fd5b6000611cc58482850161186e565b91505092915050565b6000611cda8383611df9565b905092915050565b611ceb816127f5565b82525050565b611cfa8161276a565b82525050565b611d0981612758565b82525050565b6000611d1a826126d6565b611d24818561270f565b935083602082028501611d36856126c6565b8060005b85811015611d725784840389528151611d538582611cce565b9450611d5e83612702565b925060208a01995050600181019050611d3a565b50829750879550505050505092915050565b611d8d8161277c565b82525050565b611d9c81612788565b82525050565b611db3611dae82612788565b61286d565b82525050565b611dc281612792565b82525050565b6000611dd3826126ec565b611ddd8185612731565b9350611ded81856020860161283a565b80840191505092915050565b6000611e04826126e1565b611e0e8185612720565b9350611e1e81856020860161283a565b611e2781612877565b840191505092915050565b6000611e3d826126f7565b611e47818561273c565b9350611e5781856020860161283a565b611e6081612877565b840191505092915050565b6000611e7860248361273c565b91507f424d54413a204e6f742061206c6172676520656e6f7567682074782e6761737060008301527f72696365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ede601c8361274d565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000611f1e60258361273c565b91507f42413a20496e73756666696369656e742067617320284554482920666f72207260008301527f6566756e640000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f84601b8361273c565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000611fc4601a8361273c565b91507f414b4d54413a2041757468206b657920697320696e76616c69640000000000006000830152602082019050919050565b6000612004601f8361273c565b91507f42413a2043616e6e6f742072656d6f7665206c6173742061757468206b6579006000830152602082019050919050565b600061204460218361273c565b91507f41493a20496d70726f70657220696e697469616c697a6174696f6e206f72646560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006120aa60218361273c565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612110601f8361273c565b91507f42413a2041757468206b6579206f722073656c6620697320696e76616c6964006000830152602082019050919050565b6000612150600083612731565b9150600082019050919050565b600061216a601a8361273c565b91507f42413a2041757468206b657920616c72656164792061646465640000000000006000830152602082019050919050565b60006121aa601a8361273c565b91507f42413a2041757468206b6579206e6f74207965742061646465640000000000006000830152602082019050919050565b60006121ea60278361273c565b91507f42413a20496e73756666696369656e74206761732028746f6b656e2920666f7260008301527f20726566756e64000000000000000000000000000000000000000000000000006020830152604082019050919050565b61224c816127de565b82525050565b61225b816127e8565b82525050565b600061226d8284611dc8565b915081905092915050565b600061228382611ed1565b915061228f8284611da2565b60208201915081905092915050565b60006122a982612143565b9150819050919050565b60006020820190506122c86000830184611ce2565b92915050565b6000610120820190506122e4600083018c611cf1565b6122f1602083018b611db9565b6122fe604083018a612243565b61230b6060830189612243565b818103608083015261231d8188611d0f565b905061232c60a0830187612243565b61233960c0830186612243565b61234660e0830185611d00565b612354610100830184612243565b9a9950505050505050505050565b60006040820190506123776000830185611ce2565b6123846020830184612243565b9392505050565b600060208201905081810360008301526123a58184611d0f565b905092915050565b60006020820190506123c26000830184611d84565b92915050565b60006080820190506123dd6000830187611d93565b6123ea6020830186612252565b6123f76040830185611d93565b6124046060830184611d93565b95945050505050565b60006020820190506124226000830184611db9565b92915050565b600060208201905081810360008301526124428184611e32565b905092915050565b6000602082019050818103600083015261246381611e6b565b9050919050565b6000602082019050818103600083015261248381611f11565b9050919050565b600060208201905081810360008301526124a381611f77565b9050919050565b600060208201905081810360008301526124c381611fb7565b9050919050565b600060208201905081810360008301526124e381611ff7565b9050919050565b6000602082019050818103600083015261250381612037565b9050919050565b600060208201905081810360008301526125238161209d565b9050919050565b6000602082019050818103600083015261254381612103565b9050919050565b600060208201905081810360008301526125638161215d565b9050919050565b600060208201905081810360008301526125838161219d565b9050919050565b600060208201905081810360008301526125a3816121dd565b9050919050565b60006020820190506125bf6000830184612243565b92915050565b6000604051905081810181811067ffffffffffffffff821117156125e857600080fd5b8060405250919050565b600067ffffffffffffffff82111561260957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561263157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561265957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561268557600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156126b157600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612763826127be565b9050919050565b6000612775826127be565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061280082612807565b9050919050565b600061281282612819565b9050919050565b6000612824826127be565b9050919050565b82818337600083830152505050565b60005b8381101561285857808201518184015260208101905061283d565b83811115612867576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61289181612758565b811461289c57600080fd5b50565b6128a88161276a565b81146128b357600080fd5b50565b6128bf8161277c565b81146128ca57600080fd5b50565b6128d6816127de565b81146128e157600080fd5b5056fe42413a205472616e73616374696f6e2072657665727465642073696c656e746c79a365627a7a723158205bb3953a062e1796888c36389d5d4be8f01e82607f9edba4c790f3fce498658b6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "223:3340:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;223:3340:3;;;;;;;",
  "deployedSourceMap": "223:3340:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:252:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1563:252:5;;;;;;;;;;;;;;;;:::i;:::-;;1095:145:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1095:145:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;519:327:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:327:12;;;;;;;;;;;;;;;;:::i;:::-;;810:1405:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:1405:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1322:84:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1322:84:5;;;:::i;:::-;;;;;;;;;;;;;;;;328:40:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;328:40:14;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;643:198:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;643:198:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;285:37:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:37:14;;;:::i;:::-;;;;;;;;;;;;;;;;1938:326:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1938:326:5;;;;;;;;;;;;;;;;:::i;:::-;;374:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:20:14;;;:::i;:::-;;;;;;;;;;;;;;;;2671:191:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2671:191:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;400:26:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:26:14;;;:::i;:::-;;;;;;;;;;;;;;;;1279:159:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1279:159:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1563:252:5;1010:27;1026:10;1010:15;:27::i;:::-;:58;;;;1063:4;1041:27;;:10;:27;;;1010:58;1002:102;;;;;;;;;;;;;;;;;;;;;;1674:5;1652:27;;:8;:18;1661:8;1652:18;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1644:66;;;;;;;;;;;;;;;;;;;;;;1741:4;1720:8;:18;1729:8;1720:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1770:1;1755:11;;:16;;;;;;;;;;;1799:8;1786:22;;;;;;;;;;;;1563:252;:::o;1095:145:9:-;1178:6;1203:30;;;1196:37;;1095:145;;;;;;:::o;519:327:12:-;636:1;610:22;;:27;602:73;;;;;;;;;;;;;;;;;;;;;;710:1;685:22;:26;;;;772:4;751:8;:18;760:8;751:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;801:1;786:11;;:16;;;;;;;;;;;830:8;817:22;;;;;;;;;;;;519:327;:::o;810:1405:3:-;1111:14;1141:17;1161:9;1141:29;;1212:31;1246:282;1288:4;1307:7;;;;1328:12;:10;:12::i;:::-;1354:5;;1373:13;1400:9;1423:12;1449:16;1479:13;1256:246;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1256:246:3;;;1246:257;;;;;;:280;:282::i;:::-;1212:316;;1686:116;1735:23;1760:32;1686:35;:116::i;:::-;1816:28;1848:181;1900:13;1927:9;1950:12;1976:16;2006:13;1848:38;:181::i;:::-;1813:216;;;2044:28;2058:13;2044;:28::i;:::-;2040:138;;;2086:81;2099:9;2110;2121:12;2135:16;2153:13;2086:12;:81::i;:::-;2040:138;2195:13;2188:20;;;;;810:1405;;;;;;;;:::o;1322:84:5:-;1365:7;714:1;1384:15;;1322:84;:::o;328:40:14:-;;;;;;;;;;;;;;;;;;;;;;:::o;643:198:6:-;754:14;1010:27:5;1026:10;1010:15;:27::i;:::-;:58;;;;1063:4;1041:27;;:10;:27;;;1010:58;1002:102;;;;;;;;;;;;;;;;;;;;;;787:47:6;820:13;787:32;:47::i;:::-;780:54;;643:198;;;:::o;285:37:14:-;;;;:::o;1938:326:5:-;1010:27;1026:10;1010:15;:27::i;:::-;:58;;;;1063:4;1041:27;;:10;:27;;;1010:58;1002:102;;;;;;;;;;;;;;;;;;;;;;2052:4;2030:26;;:8;:18;2039:8;2030:18;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;2022:65;;;;;;;;;;;;;;;;;;;;;;2119:1;2105:11;;:15;2097:59;;;;;;;;;;;;;;;;;;;;;;2187:5;2166:8;:18;2175:8;2166:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2217:1;2202:11;;:16;;;;;;;;;;;2248:8;2233:24;;;;;;;;;;;;1938:326;:::o;374:20:14:-;;;;:::o;2671:191:9:-;2794:6;2819:36;;;2812:43;;2671:191;;;;;;;;;;:::o;400:26:14:-;;;;:::o;1279:159:9:-;1375:6;1400:31;;;1393:38;;1279:159;;;;;;;;:::o;2463:114:5:-;2529:4;2552:8;:18;2561:8;2552:18;;;;;;;;;;;;;;;;;;;;;;;;;2545:25;;2463:114;;;:::o;3438:265:30:-;3507:7;3690:4;3637:58;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3637:58:30;;;3627:69;;;;;;3620:76;;3438:265;;;:::o;2547:356:3:-;2738:16;2757:65;2789:32;2757:23;:31;;:65;;;;:::i;:::-;2738:84;;2840:25;2856:8;2840:15;:25::i;:::-;2832:64;;;;;;;;;;;;;;;;;;;;;;2547:356;;;:::o;1414:1709:6:-;1662:7;1671:14;1780:11;1767:9;:24;;1759:73;;;;;;;;;;;;;;;;;;;;;;1874:31;1908:282;1950:4;1969:7;;;;1990:12;:10;:12::i;:::-;2016:5;;2035:13;2062:9;2085:12;2111:16;2141:13;1918:246;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1918:246:6;;;1908:257;;;;;;:280;:282::i;:::-;1874:316;;2455:13;:20;2446:5;;:29;;;;;;;;;;;2486:33;2558:45;;;2617:13;2522:118;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2522:118:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;2522:118:6;2486:154;;2652:12;2666:16;2694:4;2686:18;;2705:20;2686:40;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2651:75:6;;;;2823:28;2866:7;2861:198;;2889:24;2916:18;2930:3;2916:13;:18::i;:::-;2889:45;;2953:22;2964:10;2953:22;;;;;;;;;;;;;;;2861:198;;;;3033:3;3022:26;;;;;;;;;;;;;;3006:42;;2861:198;3077:23;3102:13;3069:47;;;;;;;;;1414:1709;;;;;;;;:::o;3218:343:3:-;3294:4;3310:20;3344:6;3353:1;3344:10;;3340:192;3360:13;:20;3356:1;:24;3340:192;;;3421:40;3444:13;3458:1;3444:16;;;;;;;;;;;;;;3421:22;:40::i;:::-;3401:60;;;;;;;;;;3503:4;3479:29;;:12;:29;;;3475:46;;3517:4;3510:11;;;;;;3475:46;3382:3;;;;;;;3340:192;;;;3549:5;3542:12;;;3218:343;;;;:::o;5064:1269:6:-;5272:16;5291:42;5320:12;5291:24;5305:9;5291;:13;;:24;;;;:::i;:::-;:28;;:42;;;;:::i;:::-;5272:61;;5454:1;5426:30;;:16;:30;;;5422:905;;;5507:21;5480:23;5493:9;5480:8;:12;;:23;;;;:::i;:::-;:48;;5472:98;;;;;;;;;;;;;;;;;;;;;;5829:10;:15;;5851:23;5864:9;5851:8;:12;;:23;;;;:::i;:::-;5829:50;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5829:50:6;;5422:905;;;5910:15;5935:16;5910:42;;5966:21;5990:27;6003:13;5990:8;:12;;:27;;;;:::i;:::-;5966:51;;6056:8;:18;;;6083:4;6056:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6056:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6056:33:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6056:33:6;;;;;;;;;6039:13;:50;;6031:102;;;;;;;;;;;;;;;;;;;;;;6272:8;:17;;;6290:10;6302:13;6272:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6272:44:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6272:44:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6272:44:6;;;;;;;;;;5422:905;;;5064:1269;;;;;;:::o;3315:448::-;3405:14;3476:28;3519:13;:20;3507:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3476:64;;3554:6;3563:1;3554:10;;3550:176;3570:13;:20;3566:1;:24;3550:176;;;3669:46;3698:13;3712:1;3698:16;;;;;;;;;;;;;;3669:28;:46::i;:::-;3650:13;3664:1;3650:16;;;;;;;;;;;;;:65;;;;3592:3;;;;;;;3550:176;;;;3743:13;3736:20;;;3315:448;;;:::o;1283:1891:30:-;1361:7;1442:2;1422:9;:16;:22;1418:72;;1476:1;1460:19;;;;1418:72;1556:9;1575;1594:7;1840:4;1829:9;1825:20;1819:27;1814:32;;1885:4;1874:9;1870:20;1864:27;1859:32;;1938:4;1927:9;1923:20;1917:27;1914:1;1909:36;1904:41;;2856:66;2851:1;2843:10;;:79;2839:127;;;2953:1;2938:17;;;;;;;2839:127;2985:2;2980:1;:7;;;;:18;;;;;2996:2;2991:1;:7;;;;2980:18;2976:66;;;3029:1;3014:17;;;;;;;2976:66;3143:24;3153:4;3159:1;3162;3165;3143:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3143:24:30;;;;;;;;3136:31;;;;;1283:1891;;;;;:::o;3693:478:5:-;3758:13;3912:2;3898:4;:11;:16;3894:64;;;3916:42;;;;;;;;;;;;;;;;;;;;;3894:64;3968:23;3994:30;4005:1;4022;4008:4;:11;:15;3994:4;:10;;:30;;;;;:::i;:::-;3968:56;;4102:10;4091:32;;;;;;;;;;;;;;4084:39;;;3693:478;;;;:::o;4438:207:6:-;4520:7;4529;4538;4547:12;4589;4578:60;;;;;;;;;;;;;;4571:67;;;;;;;;;;;;;;4438:207;;;;;:::o;1330:134:31:-;1388:7;1414:43;1418:1;1421;1414:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1407:50;;1330:134;;;;:::o;890:176::-;948:7;967:9;983:1;979;:5;967:17;;1007:1;1002;:6;;994:46;;;;;;;;;;;;;;;;;;;;;;1058:1;1051:8;;;890:176;;;;:::o;2215:459::-;2273:7;2519:1;2514;:6;2510:45;;;2543:1;2536:8;;;;2510:45;2565:9;2581:1;2577;:5;2565:17;;2609:1;2604;2600;:5;;;;;;:10;2592:56;;;;;;;;;;;;;;;;;;;;;;2666:1;2659:8;;;2215:459;;;;;:::o;3954:364:6:-;4037:12;4062:20;4084:14;4100:17;4119:18;4141:36;4164:12;4141:22;:36::i;:::-;4061:116;;;;;;;;4230:81;4263:12;4277:6;4285:9;4296:5;4230:19;:81::i;:::-;4223:88;;;;;;3954:364;;;:::o;9430:2536:29:-;9570:12;9633:7;9624:6;:16;9606:6;:13;:35;;9598:44;;;;;;9653:22;9723:7;9716:15;9749:1;9744:1967;;;;11852:4;11846:11;11833:24;;11903:4;11892:9;11888:20;11882:4;11875:34;9709:2214;;9744:1967;9926:4;9920:11;9907:24;;10585:2;10576:7;10572:16;10967:9;10960:17;10954:4;10950:28;10938:9;10927;10923:25;10919:60;11015:7;11011:2;11007:16;11267:6;11253:9;11246:17;11240:4;11236:28;11224:9;11216:6;11212:22;11208:57;11204:70;11041:425;11300:3;11296:2;11293:11;11041:425;;;11444:2;11438:9;11434:2;11427:21;11341:4;11337:2;11333:13;11327:19;;11381:4;11377:2;11373:13;11367:19;;11041:425;;;11045:247;11502:7;11491:9;11484:26;11692:2;11688:7;11683:2;11679;11675:11;11671:25;11665:4;11658:39;9751:1960;;;9709:2214;;11950:9;11943:16;;;9430:2536;;;;;:::o;1788:187:31:-;1874:7;1906:1;1901;:6;;1909:12;1893:29;;;;;;;;;;;;;;;;;;;;;;;;;1932:9;1948:1;1944;:5;1932:17;;1967:1;1960:8;;;1788:187;;;;;:::o;2935:532:5:-;3113:12;3142;3156:16;3176:12;:17;;3198:9;3215:6;3223:5;3176:53;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3141:88:5;;;;3329:7;3324:116;;3352:24;3379:18;3393:3;3379:13;:18::i;:::-;3352:45;;3418:10;3411:18;;;;;;;;;;;;;;;;;;;;3324:116;3457:3;3450:10;;;;2935:532;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:150;;234:6;228:13;219:22;;246:41;281:5;246:41;;;213:79;;;;;315:693;;444:3;437:4;429:6;425:17;421:27;411:2;;462:1;459;452:12;411:2;492:6;486:13;514:81;529:65;587:6;529:65;;;514:81;;;505:90;;612:5;637:6;630:5;623:21;667:4;659:6;655:17;645:27;;689:4;684:3;680:14;673:21;;742:6;775:1;760:242;785:6;782:1;779:13;760:242;;;861:3;855:10;847:6;843:23;885:53;934:3;922:10;885:53;;;880:3;873:66;962:4;957:3;953:14;946:21;;990:4;985:3;981:14;974:21;;817:185;807:1;804;800:9;795:14;;760:242;;;764:14;404:604;;;;;;;;1032:693;;1154:3;1147:4;1139:6;1135:17;1131:27;1121:2;;1172:1;1169;1162:12;1121:2;1209:6;1196:20;1231:85;1246:69;1308:6;1246:69;;;1231:85;;;1222:94;;1333:5;1358:6;1351:5;1344:21;1388:4;1380:6;1376:17;1366:27;;1410:4;1405:3;1401:14;1394:21;;1463:6;1496:1;1481:238;1506:6;1503:1;1500:13;1481:238;;;1589:3;1576:17;1568:6;1564:30;1613:42;1651:3;1639:10;1613:42;;;1608:3;1601:55;1679:4;1674:3;1670:14;1663:21;;1707:4;1702:3;1698:14;1691:21;;1538:181;1528:1;1525;1521:9;1516:14;;1481:238;;;1485:14;1114:611;;;;;;;;1751:352;;;1881:3;1874:4;1866:6;1862:17;1858:27;1848:2;;1899:1;1896;1889:12;1848:2;1932:6;1919:20;1909:30;;1959:18;1951:6;1948:30;1945:2;;;1991:1;1988;1981:12;1945:2;2025:4;2017:6;2013:17;2001:29;;2076:3;2068:4;2060:6;2056:17;2046:8;2042:32;2039:41;2036:2;;;2093:1;2090;2083:12;2036:2;1841:262;;;;;;2111:128;;2192:6;2186:13;2177:22;;2204:30;2228:5;2204:30;;;2171:68;;;;;2260:336;;;2374:3;2367:4;2359:6;2355:17;2351:27;2341:2;;2392:1;2389;2382:12;2341:2;2425:6;2412:20;2402:30;;2452:18;2444:6;2441:30;2438:2;;;2484:1;2481;2474:12;2438:2;2518:4;2510:6;2506:17;2494:29;;2569:3;2561:4;2553:6;2549:17;2539:8;2535:32;2532:41;2529:2;;;2586:1;2583;2576:12;2529:2;2334:262;;;;;;2605:432;;2702:3;2695:4;2687:6;2683:17;2679:27;2669:2;;2720:1;2717;2710:12;2669:2;2757:6;2744:20;2779:60;2794:44;2831:6;2794:44;;;2779:60;;;2770:69;;2859:6;2852:5;2845:21;2895:4;2887:6;2883:17;2928:4;2921:5;2917:16;2963:3;2954:6;2949:3;2945:16;2942:25;2939:2;;;2980:1;2977;2970:12;2939:2;2990:41;3024:6;3019:3;3014;2990:41;;;2662:375;;;;;;;;3046:434;;3154:3;3147:4;3139:6;3135:17;3131:27;3121:2;;3172:1;3169;3162:12;3121:2;3202:6;3196:13;3224:60;3239:44;3276:6;3239:44;;;3224:60;;;3215:69;;3304:6;3297:5;3290:21;3340:4;3332:6;3328:17;3373:4;3366:5;3362:16;3408:3;3399:6;3394:3;3390:16;3387:25;3384:2;;;3425:1;3422;3415:12;3384:2;3435:39;3467:6;3462:3;3457;3435:39;;;3114:366;;;;;;;;3489:440;;3590:3;3583:4;3575:6;3571:17;3567:27;3557:2;;3608:1;3605;3598:12;3557:2;3645:6;3632:20;3667:64;3682:48;3723:6;3682:48;;;3667:64;;;3658:73;;3751:6;3744:5;3737:21;3787:4;3779:6;3775:17;3820:4;3813:5;3809:16;3855:3;3846:6;3841:3;3837:16;3834:25;3831:2;;;3872:1;3869;3862:12;3831:2;3882:41;3916:6;3911:3;3906;3882:41;;;3550:379;;;;;;;;3938:436;;4047:3;4040:4;4032:6;4028:17;4024:27;4014:2;;4065:1;4062;4055:12;4014:2;4095:6;4089:13;4117:61;4132:45;4170:6;4132:45;;;4117:61;;;4108:70;;4198:6;4191:5;4184:21;4234:4;4226:6;4222:17;4267:4;4260:5;4256:16;4302:3;4293:6;4288:3;4284:16;4281:25;4278:2;;;4319:1;4316;4309:12;4278:2;4329:39;4361:6;4356:3;4351;4329:39;;;4007:367;;;;;;;;4382:130;;4462:6;4449:20;4440:29;;4474:33;4501:5;4474:33;;;4434:78;;;;;4519:134;;4603:6;4597:13;4588:22;;4615:33;4642:5;4615:33;;;4582:71;;;;;4660:241;;4764:2;4752:9;4743:7;4739:23;4735:32;4732:2;;;4780:1;4777;4770:12;4732:2;4815:1;4832:53;4877:7;4868:6;4857:9;4853:22;4832:53;;;4822:63;;4794:97;4726:175;;;;;4908:777;;;;;5087:3;5075:9;5066:7;5062:23;5058:33;5055:2;;;5104:1;5101;5094:12;5055:2;5139:1;5156:72;5220:7;5211:6;5200:9;5196:22;5156:72;;;5146:82;;5118:116;5265:2;5283:64;5339:7;5330:6;5319:9;5315:22;5283:64;;;5273:74;;5244:109;5384:2;5402:64;5458:7;5449:6;5438:9;5434:22;5402:64;;;5392:74;;5363:109;5524:2;5513:9;5509:18;5503:25;5548:18;5540:6;5537:30;5534:2;;;5580:1;5577;5570:12;5534:2;5600:69;5661:7;5652:6;5641:9;5637:22;5600:69;;;5590:79;;5482:193;5049:636;;;;;;;;5692:1179;;;;;;;;;5953:3;5941:9;5932:7;5928:23;5924:33;5921:2;;;5970:1;5967;5960:12;5921:2;6005:1;6022:53;6067:7;6058:6;6047:9;6043:22;6022:53;;;6012:63;;5984:97;6112:2;6130:53;6175:7;6166:6;6155:9;6151:22;6130:53;;;6120:63;;6091:98;6248:2;6237:9;6233:18;6220:32;6272:18;6264:6;6261:30;6258:2;;;6304:1;6301;6294:12;6258:2;6332:80;6404:7;6395:6;6384:9;6380:22;6332:80;;;6322:90;;;;6199:219;6477:2;6466:9;6462:18;6449:32;6501:18;6493:6;6490:30;6487:2;;;6533:1;6530;6523:12;6487:2;6561:80;6633:7;6624:6;6613:9;6609:22;6561:80;;;6551:90;;;;6428:219;6706:3;6695:9;6691:19;6678:33;6731:18;6723:6;6720:30;6717:2;;;6763:1;6760;6753:12;6717:2;6791:64;6847:7;6838:6;6827:9;6823:22;6791:64;;;6781:74;;;;6657:204;5915:956;;;;;;;;;;;;6878:721;;;;;7042:3;7030:9;7021:7;7017:23;7013:33;7010:2;;;7059:1;7056;7049:12;7010:2;7094:1;7111:53;7156:7;7147:6;7136:9;7132:22;7111:53;;;7101:63;;7073:97;7201:2;7219:53;7264:7;7255:6;7244:9;7240:22;7219:53;;;7209:63;;7180:98;7309:2;7327:53;7372:7;7363:6;7352:9;7348:22;7327:53;;;7317:63;;7288:98;7445:2;7434:9;7430:18;7417:32;7469:18;7461:6;7458:30;7455:2;;;7501:1;7498;7491:12;7455:2;7521:62;7575:7;7566:6;7555:9;7551:22;7521:62;;;7511:72;;7396:193;7004:595;;;;;;;;7606:867;;;;;;;7797:3;7785:9;7776:7;7772:23;7768:33;7765:2;;;7814:1;7811;7804:12;7765:2;7849:1;7866:53;7911:7;7902:6;7891:9;7887:22;7866:53;;;7856:63;;7828:97;7956:2;7974:53;8019:7;8010:6;7999:9;7995:22;7974:53;;;7964:63;;7935:98;8064:2;8082:53;8127:7;8118:6;8107:9;8103:22;8082:53;;;8072:63;;8043:98;8172:2;8190:53;8235:7;8226:6;8215:9;8211:22;8190:53;;;8180:63;;8151:98;8308:3;8297:9;8293:19;8280:33;8333:18;8325:6;8322:30;8319:2;;;8365:1;8362;8355:12;8319:2;8393:64;8449:7;8440:6;8429:9;8425:22;8393:64;;;8383:74;;;;8259:204;7759:714;;;;;;;;;8480:394;;8621:2;8609:9;8600:7;8596:23;8592:32;8589:2;;;8637:1;8634;8627:12;8589:2;8693:1;8682:9;8678:17;8672:24;8716:18;8708:6;8705:30;8702:2;;;8748:1;8745;8738:12;8702:2;8768:90;8850:7;8841:6;8830:9;8826:22;8768:90;;;8758:100;;8651:213;8583:291;;;;;8881:387;;9015:2;9003:9;8994:7;8990:23;8986:32;8983:2;;;9031:1;9028;9021:12;8983:2;9094:1;9083:9;9079:17;9066:31;9117:18;9109:6;9106:30;9103:2;;;9149:1;9146;9139:12;9103:2;9169:83;9244:7;9235:6;9224:9;9220:22;9169:83;;;9159:93;;9045:213;8977:291;;;;;9275:1119;;;;;;;9503:3;9491:9;9482:7;9478:23;9474:33;9471:2;;;9520:1;9517;9510:12;9471:2;9583:1;9572:9;9568:17;9555:31;9606:18;9598:6;9595:30;9592:2;;;9638:1;9635;9628:12;9592:2;9658:83;9733:7;9724:6;9713:9;9709:22;9658:83;;;9648:93;;9534:213;9778:2;9796:53;9841:7;9832:6;9821:9;9817:22;9796:53;;;9786:63;;9757:98;9886:2;9904:53;9949:7;9940:6;9929:9;9925:22;9904:53;;;9894:63;;9865:98;9994:2;10012:53;10057:7;10048:6;10037:9;10033:22;10012:53;;;10002:63;;9973:98;10102:3;10121:53;10166:7;10157:6;10146:9;10142:22;10121:53;;;10111:63;;10081:99;10239:3;10228:9;10224:19;10211:33;10264:18;10256:6;10253:30;10250:2;;;10296:1;10293;10286:12;10250:2;10316:62;10370:7;10361:6;10350:9;10346:22;10316:62;;;10306:72;;10190:194;9465:929;;;;;;;;;10401:257;;10513:2;10501:9;10492:7;10488:23;10484:32;10481:2;;;10529:1;10526;10519:12;10481:2;10564:1;10581:61;10634:7;10625:6;10614:9;10610:22;10581:61;;;10571:71;;10543:105;10475:183;;;;;10665:354;;10786:2;10774:9;10765:7;10761:23;10757:32;10754:2;;;10802:1;10799;10792:12;10754:2;10858:1;10847:9;10843:17;10837:24;10881:18;10873:6;10870:30;10867:2;;;10913:1;10910;10903:12;10867:2;10933:70;10995:7;10986:6;10975:9;10971:22;10933:70;;;10923:80;;10816:193;10748:271;;;;;11026:263;;11141:2;11129:9;11120:7;11116:23;11112:32;11109:2;;;11157:1;11154;11147:12;11109:2;11192:1;11209:64;11265:7;11256:6;11245:9;11241:22;11209:64;;;11199:74;;11171:108;11103:186;;;;;11297:177;;11408:60;11464:3;11456:6;11408:60;;;11394:74;;11387:87;;;;;11482:142;11573:45;11612:5;11573:45;;;11568:3;11561:58;11555:69;;;11631:137;11730:32;11756:5;11730:32;;;11725:3;11718:45;11712:56;;;11775:113;11858:24;11876:5;11858:24;;;11853:3;11846:37;11840:48;;;11922:888;;12077:59;12130:5;12077:59;;;12149:91;12233:6;12228:3;12149:91;;;12142:98;;12263:3;12305:4;12297:6;12293:17;12288:3;12284:27;12332:61;12387:5;12332:61;;;12413:7;12441:1;12426:345;12451:6;12448:1;12445:13;12426:345;;;12513:9;12507:4;12503:20;12498:3;12491:33;12558:6;12552:13;12580:74;12649:4;12634:13;12580:74;;;12572:82;;12671:65;12729:6;12671:65;;;12661:75;;12759:4;12754:3;12750:14;12743:21;;12483:288;12473:1;12470;12466:9;12461:14;;12426:345;;;12430:14;12784:4;12777:11;;12801:3;12794:10;;12056:754;;;;;;;;;;12818:104;12895:21;12910:5;12895:21;;;12890:3;12883:34;12877:45;;;12929:113;13012:24;13030:5;13012:24;;;13007:3;13000:37;12994:48;;;13049:152;13150:45;13170:24;13188:5;13170:24;;;13150:45;;;13145:3;13138:58;13132:69;;;13208:110;13289:23;13306:5;13289:23;;;13284:3;13277:36;13271:47;;;13325:356;;13453:38;13485:5;13453:38;;;13503:88;13584:6;13579:3;13503:88;;;13496:95;;13596:52;13641:6;13636:3;13629:4;13622:5;13618:16;13596:52;;;13669:6;13664:3;13660:16;13653:23;;13433:248;;;;;;13688:315;;13784:34;13812:5;13784:34;;;13830:60;13883:6;13878:3;13830:60;;;13823:67;;13895:52;13940:6;13935:3;13928:4;13921:5;13917:16;13895:52;;;13968:29;13990:6;13968:29;;;13963:3;13959:39;13952:46;;13764:239;;;;;;14010:347;;14122:39;14155:5;14122:39;;;14173:71;14237:6;14232:3;14173:71;;;14166:78;;14249:52;14294:6;14289:3;14282:4;14275:5;14271:16;14249:52;;;14322:29;14344:6;14322:29;;;14317:3;14313:39;14306:46;;14102:255;;;;;;14365:373;;14525:67;14589:2;14584:3;14525:67;;;14518:74;;14625:34;14621:1;14616:3;14612:11;14605:55;14694:6;14689:2;14684:3;14680:12;14673:28;14729:2;14724:3;14720:12;14713:19;;14511:227;;;;14747:400;;14925:85;15007:2;15002:3;14925:85;;;14918:92;;15043:66;15039:1;15034:3;15030:11;15023:87;15138:2;15133:3;15129:12;15122:19;;14911:236;;;;15156:374;;15316:67;15380:2;15375:3;15316:67;;;15309:74;;15416:34;15412:1;15407:3;15403:11;15396:55;15485:7;15480:2;15475:3;15471:12;15464:29;15521:2;15516:3;15512:12;15505:19;;15302:228;;;;15539:327;;15699:67;15763:2;15758:3;15699:67;;;15692:74;;15799:29;15795:1;15790:3;15786:11;15779:50;15857:2;15852:3;15848:12;15841:19;;15685:181;;;;15875:326;;16035:67;16099:2;16094:3;16035:67;;;16028:74;;16135:28;16131:1;16126:3;16122:11;16115:49;16192:2;16187:3;16183:12;16176:19;;16021:180;;;;16210:331;;16370:67;16434:2;16429:3;16370:67;;;16363:74;;16470:33;16466:1;16461:3;16457:11;16450:54;16532:2;16527:3;16523:12;16516:19;;16356:185;;;;16550:370;;16710:67;16774:2;16769:3;16710:67;;;16703:74;;16810:34;16806:1;16801:3;16797:11;16790:55;16879:3;16874:2;16869:3;16865:12;16858:25;16911:2;16906:3;16902:12;16895:19;;16696:224;;;;16929:370;;17089:67;17153:2;17148:3;17089:67;;;17082:74;;17189:34;17185:1;17180:3;17176:11;17169:55;17258:3;17253:2;17248:3;17244:12;17237:25;17290:2;17285:3;17281:12;17274:19;;17075:224;;;;17308:331;;17468:67;17532:2;17527:3;17468:67;;;17461:74;;17568:33;17564:1;17559:3;17555:11;17548:54;17630:2;17625:3;17621:12;17614:19;;17454:185;;;;17648:296;;17825:83;17906:1;17901:3;17825:83;;;17818:90;;17936:1;17931:3;17927:11;17920:18;;17811:133;;;;17953:326;;18113:67;18177:2;18172:3;18113:67;;;18106:74;;18213:28;18209:1;18204:3;18200:11;18193:49;18270:2;18265:3;18261:12;18254:19;;18099:180;;;;18288:326;;18448:67;18512:2;18507:3;18448:67;;;18441:74;;18548:28;18544:1;18539:3;18535:11;18528:49;18605:2;18600:3;18596:12;18589:19;;18434:180;;;;18623:376;;18783:67;18847:2;18842:3;18783:67;;;18776:74;;18883:34;18879:1;18874:3;18870:11;18863:55;18952:9;18947:2;18942:3;18938:12;18931:31;18990:2;18985:3;18981:12;18974:19;;18769:230;;;;19007:113;19090:24;19108:5;19090:24;;;19085:3;19078:37;19072:48;;;19127:107;19206:22;19222:5;19206:22;;;19201:3;19194:35;19188:46;;;19241:262;;19385:93;19474:3;19465:6;19385:93;;;19378:100;;19495:3;19488:10;;19366:137;;;;;19510:511;;19737:148;19881:3;19737:148;;;19730:155;;19896:75;19967:3;19958:6;19896:75;;;19993:2;19988:3;19984:12;19977:19;;20013:3;20006:10;;19718:303;;;;;20028:370;;20226:147;20369:3;20226:147;;;20219:154;;20390:3;20383:10;;20207:191;;;;20405:229;;20531:2;20520:9;20516:18;20508:26;;20545:79;20621:1;20610:9;20606:17;20597:6;20545:79;;;20502:132;;;;;20641:1303;;21057:3;21046:9;21042:19;21034:27;;21072:87;21156:1;21145:9;21141:17;21132:6;21072:87;;;21170:70;21236:2;21225:9;21221:18;21212:6;21170:70;;;21251:72;21319:2;21308:9;21304:18;21295:6;21251:72;;;21334;21402:2;21391:9;21387:18;21378:6;21334:72;;;21455:9;21449:4;21445:20;21439:3;21428:9;21424:19;21417:49;21480:118;21593:4;21584:6;21480:118;;;21472:126;;21609:73;21677:3;21666:9;21662:19;21653:6;21609:73;;;21693;21761:3;21750:9;21746:19;21737:6;21693:73;;;21777;21845:3;21834:9;21830:19;21821:6;21777:73;;;21861;21929:3;21918:9;21914:19;21905:6;21861:73;;;21028:916;;;;;;;;;;;;;21951:340;;22105:2;22094:9;22090:18;22082:26;;22119:79;22195:1;22184:9;22180:17;22171:6;22119:79;;;22209:72;22277:2;22266:9;22262:18;22253:6;22209:72;;;22076:215;;;;;;22298:381;;22476:2;22465:9;22461:18;22453:26;;22526:9;22520:4;22516:20;22512:1;22501:9;22497:17;22490:47;22551:118;22664:4;22655:6;22551:118;;;22543:126;;22447:232;;;;;22686:201;;22798:2;22787:9;22783:18;22775:26;;22812:65;22874:1;22863:9;22859:17;22850:6;22812:65;;;22769:118;;;;;22894:539;;23092:3;23081:9;23077:19;23069:27;;23107:71;23175:1;23164:9;23160:17;23151:6;23107:71;;;23189:68;23253:2;23242:9;23238:18;23229:6;23189:68;;;23268:72;23336:2;23325:9;23321:18;23312:6;23268:72;;;23351;23419:2;23408:9;23404:18;23395:6;23351:72;;;23063:370;;;;;;;;23440:209;;23556:2;23545:9;23541:18;23533:26;;23570:69;23636:1;23625:9;23621:17;23612:6;23570:69;;;23527:122;;;;;23656:301;;23794:2;23783:9;23779:18;23771:26;;23844:9;23838:4;23834:20;23830:1;23819:9;23815:17;23808:47;23869:78;23942:4;23933:6;23869:78;;;23861:86;;23765:192;;;;;23964:407;;24155:2;24144:9;24140:18;24132:26;;24205:9;24199:4;24195:20;24191:1;24180:9;24176:17;24169:47;24230:131;24356:4;24230:131;;;24222:139;;24126:245;;;;24378:407;;24569:2;24558:9;24554:18;24546:26;;24619:9;24613:4;24609:20;24605:1;24594:9;24590:17;24583:47;24644:131;24770:4;24644:131;;;24636:139;;24540:245;;;;24792:407;;24983:2;24972:9;24968:18;24960:26;;25033:9;25027:4;25023:20;25019:1;25008:9;25004:17;24997:47;25058:131;25184:4;25058:131;;;25050:139;;24954:245;;;;25206:407;;25397:2;25386:9;25382:18;25374:26;;25447:9;25441:4;25437:20;25433:1;25422:9;25418:17;25411:47;25472:131;25598:4;25472:131;;;25464:139;;25368:245;;;;25620:407;;25811:2;25800:9;25796:18;25788:26;;25861:9;25855:4;25851:20;25847:1;25836:9;25832:17;25825:47;25886:131;26012:4;25886:131;;;25878:139;;25782:245;;;;26034:407;;26225:2;26214:9;26210:18;26202:26;;26275:9;26269:4;26265:20;26261:1;26250:9;26246:17;26239:47;26300:131;26426:4;26300:131;;;26292:139;;26196:245;;;;26448:407;;26639:2;26628:9;26624:18;26616:26;;26689:9;26683:4;26679:20;26675:1;26664:9;26660:17;26653:47;26714:131;26840:4;26714:131;;;26706:139;;26610:245;;;;26862:407;;27053:2;27042:9;27038:18;27030:26;;27103:9;27097:4;27093:20;27089:1;27078:9;27074:17;27067:47;27128:131;27254:4;27128:131;;;27120:139;;27024:245;;;;27276:407;;27467:2;27456:9;27452:18;27444:26;;27517:9;27511:4;27507:20;27503:1;27492:9;27488:17;27481:47;27542:131;27668:4;27542:131;;;27534:139;;27438:245;;;;27690:407;;27881:2;27870:9;27866:18;27858:26;;27931:9;27925:4;27921:20;27917:1;27906:9;27902:17;27895:47;27956:131;28082:4;27956:131;;;27948:139;;27852:245;;;;28104:407;;28295:2;28284:9;28280:18;28272:26;;28345:9;28339:4;28335:20;28331:1;28320:9;28316:17;28309:47;28370:131;28496:4;28370:131;;;28362:139;;28266:245;;;;28518:213;;28636:2;28625:9;28621:18;28613:26;;28650:71;28718:1;28707:9;28703:17;28694:6;28650:71;;;28607:124;;;;;28738:256;;28800:2;28794:9;28784:19;;28838:4;28830:6;28826:17;28937:6;28925:10;28922:22;28901:18;28889:10;28886:34;28883:62;28880:2;;;28958:1;28955;28948:12;28880:2;28978:10;28974:2;28967:22;28778:216;;;;;29001:305;;29161:18;29153:6;29150:30;29147:2;;;29193:1;29190;29183:12;29147:2;29228:4;29220:6;29216:17;29208:25;;29291:4;29285;29281:15;29273:23;;29084:222;;;;29313:309;;29477:18;29469:6;29466:30;29463:2;;;29509:1;29506;29499:12;29463:2;29544:4;29536:6;29532:17;29524:25;;29607:4;29601;29597:15;29589:23;;29400:222;;;;29629:317;;29768:18;29760:6;29757:30;29754:2;;;29800:1;29797;29790:12;29754:2;29867:4;29863:9;29856:4;29848:6;29844:17;29840:33;29832:41;;29931:4;29925;29921:15;29913:23;;29691:255;;;;29953:321;;30096:18;30088:6;30085:30;30082:2;;;30128:1;30125;30118:12;30082:2;30195:4;30191:9;30184:4;30176:6;30172:17;30168:33;30160:41;;30259:4;30253;30249:15;30241:23;;30019:255;;;;30281:318;;30421:18;30413:6;30410:30;30407:2;;;30453:1;30450;30443:12;30407:2;30520:4;30516:9;30509:4;30501:6;30497:17;30493:33;30485:41;;30584:4;30578;30574:15;30566:23;;30344:255;;;;30606:156;;30697:3;30689:11;;30735:4;30730:3;30726:14;30718:22;;30683:79;;;;30769:142;;30883:5;30877:12;30867:22;;30848:63;;;;30918:117;;31007:5;31001:12;30991:22;;30972:63;;;;31042:121;;31135:5;31129:12;31119:22;;31100:63;;;;31170:122;;31264:5;31258:12;31248:22;;31229:63;;;;31299:113;;31402:4;31397:3;31393:14;31385:22;;31379:33;;;;31420:183;;31555:6;31550:3;31543:19;31592:4;31587:3;31583:14;31568:29;;31536:67;;;;;31612:152;;31716:6;31711:3;31704:19;31753:4;31748:3;31744:14;31729:29;;31697:67;;;;;31773:144;;31908:3;31893:18;;31886:31;;;;;31926:163;;32041:6;32036:3;32029:19;32078:4;32073:3;32069:14;32054:29;;32022:67;;;;;32098:145;;32234:3;32219:18;;32212:31;;;;;32251:91;;32313:24;32331:5;32313:24;;;32302:35;;32296:46;;;;32349:99;;32419:24;32437:5;32419:24;;;32408:35;;32402:46;;;;32455:85;;32528:5;32521:13;32514:21;32503:32;;32497:43;;;;32547:72;;32609:5;32598:16;;32592:27;;;;32626:144;;32698:66;32691:5;32687:78;32676:89;;32670:100;;;;32777:121;;32850:42;32843:5;32839:54;32828:65;;32822:76;;;;32905:72;;32967:5;32956:16;;32950:27;;;;32984:81;;33055:4;33048:5;33044:16;33033:27;;33027:38;;;;33072:129;;33159:37;33190:5;33159:37;;;33146:50;;33140:61;;;;33208:121;;33287:37;33318:5;33287:37;;;33274:50;;33268:61;;;;33336:108;;33415:24;33433:5;33415:24;;;33402:37;;33396:48;;;;33452:145;33533:6;33528:3;33523;33510:30;33589:1;33580:6;33575:3;33571:16;33564:27;33503:94;;;;33606:268;33671:1;33678:101;33692:6;33689:1;33686:13;33678:101;;;33768:1;33763:3;33759:11;33753:18;33749:1;33744:3;33740:11;33733:39;33714:2;33711:1;33707:10;33702:15;;33678:101;;;33794:6;33791:1;33788:13;33785:2;;;33859:1;33850:6;33845:3;33841:16;33834:27;33785:2;33655:219;;;;;33882:74;;33946:5;33935:16;;33929:27;;;;33963:97;;34051:2;34047:7;34042:2;34035:5;34031:14;34027:28;34017:38;;34011:49;;;;34068:117;34137:24;34155:5;34137:24;;;34130:5;34127:35;34117:2;;34176:1;34173;34166:12;34117:2;34111:74;;34192:133;34269:32;34295:5;34269:32;;;34262:5;34259:43;34249:2;;34316:1;34313;34306:12;34249:2;34243:82;;34332:111;34398:21;34413:5;34398:21;;;34391:5;34388:32;34378:2;;34434:1;34431;34424:12;34378:2;34372:71;;34450:117;34519:24;34537:5;34519:24;;;34512:5;34509:35;34499:2;;34558:1;34555;34548:12;34499:2;34493:74;",
  "source": "pragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"./BaseMetaTxAccount.sol\";\n\n/**\n * @title AuthKeyMetaTxAccount\n * @author Authereum Labs, Inc.\n * @dev Contract used by auth keys to send transactions.\n */\n\ncontract AuthKeyMetaTxAccount is BaseMetaTxAccount {\n\n    /// @dev Execute multiple authKey meta transactions\n    /// @param _transactions Arrays of transaction data ([destination, value, gasLimit, data][...]...)\n    /// @param _gasPrice Gas price set by the user\n    /// @param _gasOverhead Gas overhead of the transaction calculated offchain\n    /// @param _feeTokenAddress Address of the token used to pay a fee\n    /// @param _feeTokenRate Rate of the token (in tokenGasPrice/ethGasPrice) used to pay a fee\n    /// @param _transactionMessageHashSignature Signed transaction data\n    function executeMultipleAuthKeyMetaTransactions(\n        bytes[] memory _transactions,\n        uint256 _gasPrice,\n        uint256 _gasOverhead,\n        address _feeTokenAddress,\n        uint256 _feeTokenRate,\n        bytes memory _transactionMessageHashSignature\n    )\n        public\n        returns (bytes[] memory)\n    {\n        uint256 _startGas = gasleft();\n\n        // Hash the parameters\n        bytes32 _transactionMessageHash = keccak256(abi.encode(\n            address(this),\n            msg.sig,\n            getChainId(),\n            nonce,\n            _transactions,\n            _gasPrice,\n            _gasOverhead,\n            _feeTokenAddress,\n            _feeTokenRate\n        )).toEthSignedMessageHash();\n\n        // Validate the signer\n        // NOTE: This must be done prior to the _atomicExecuteMultipleMetaTransactions() call for security purposes\n        _validateAuthKeyMetaTransactionSigs(\n            _transactionMessageHash, _transactionMessageHashSignature\n        );\n\n        (, bytes[] memory _returnValues) = _atomicExecuteMultipleMetaTransactions(\n            _transactions,\n            _gasPrice,\n            _gasOverhead,\n            _feeTokenAddress,\n            _feeTokenRate\n        );\n\n        if (_shouldRefund(_transactions)) {\n          _issueRefund(_startGas, _gasPrice, _gasOverhead, _feeTokenAddress, _feeTokenRate);\n        }\n\n        return _returnValues;\n    }\n\n    /**\n     *  Internal functions\n     */\n\n    /// @dev Validate signatures from an auth key meta transaction\n    /// @param _transactionMessageHash Ethereum signed message of the transaction\n    /// @param _transactionMessageHashSignature Signed transaction data\n    /// @return Address of the auth key that signed the data\n    function _validateAuthKeyMetaTransactionSigs(\n        bytes32 _transactionMessageHash,\n        bytes memory _transactionMessageHashSignature\n    )\n        internal\n        view\n    {\n        address _authKey = _transactionMessageHash.recover(_transactionMessageHashSignature);\n        require(_isValidAuthKey(_authKey), \"AKMTA: Auth key is invalid\");\n    }\n\n    /// @dev Check whether a refund should be issued\n    /// @notice A refund should not be issued if the account is performing an Authereum-related update\n    /// @param _transactions Arrays of transaction data ([destination, value, gasLimit, data][...]...)\n    /// @return True if a refund should be issued\n    function _shouldRefund(bytes[] memory _transactions) internal view returns (bool) {\n        address _destination;\n        for(uint i = 0; i < _transactions.length; i++) {\n            (_destination,,,) = _decodeTransactionData(_transactions[i]);\n            if (_destination != address(this)) return true;\n        }\n\n        return false;\n    }\n}",
  "sourcePath": "/Users/smitrajput/Projects/batchoo/contracts/account/AuthKeyMetaTxAccount.sol",
  "ast": {
    "absolutePath": "/Users/smitrajput/Projects/batchoo/contracts/account/AuthKeyMetaTxAccount.sol",
    "exportedSymbols": {
      "AuthKeyMetaTxAccount": [
        279
      ]
    },
    "id": 280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 128,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 129,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:3"
      },
      {
        "absolutePath": "/Users/smitrajput/Projects/batchoo/contracts/account/BaseMetaTxAccount.sol",
        "file": "./BaseMetaTxAccount.sol",
        "id": 130,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 875,
        "src": "59:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 131,
              "name": "BaseMetaTxAccount",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 874,
              "src": "256:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseMetaTxAccount_$874",
                "typeString": "contract BaseMetaTxAccount"
              }
            },
            "id": 132,
            "nodeType": "InheritanceSpecifier",
            "src": "256:17:3"
          }
        ],
        "contractDependencies": [
          549,
          874,
          1418,
          1437,
          1443,
          1483,
          1489,
          1502,
          3353,
          3400
        ],
        "contractKind": "contract",
        "documentation": "@title AuthKeyMetaTxAccount\n@author Authereum Labs, Inc.\n@dev Contract used by auth keys to send transactions.",
        "fullyImplemented": true,
        "id": 279,
        "linearizedBaseContracts": [
          279,
          874,
          549,
          1418,
          3353,
          3400,
          1443,
          1483,
          1437,
          1489,
          1502
        ],
        "name": "AuthKeyMetaTxAccount",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "1131:1084:3",
              "statements": [
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "name": "_startGas",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1141:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1141:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 153,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11645,
                      "src": "1161:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1141:29:3"
                },
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "name": "_transactionMessageHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1212:31:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1212:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 162,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11698,
                                    "src": "1288:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                      "typeString": "contract AuthKeyMetaTxAccount"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                      "typeString": "contract AuthKeyMetaTxAccount"
                                    }
                                  ],
                                  "id": 161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1280:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1280:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 164,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11652,
                                  "src": "1307:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sig",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1307:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 166,
                                  "name": "getChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 389,
                                  "src": "1328:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1328:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 168,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1499,
                                "src": "1354:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 169,
                                "name": "_transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "1373:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 170,
                                "name": "_gasPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "1400:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 171,
                                "name": "_gasOverhead",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "1423:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 172,
                                "name": "_feeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "1449:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 173,
                                "name": "_feeTokenRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1479:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 159,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11639,
                                "src": "1256:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1256:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1256:246:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 158,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11646,
                          "src": "1246:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:257:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3804,
                      "src": "1246:280:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:282:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1212:316:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_transactionMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1735:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "_transactionMessageHashSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "1760:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 179,
                      "name": "_validateAuthKeyMetaTransactionSigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "1686:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory) view"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:116:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:116:3"
                },
                {
                  "assignments": [
                    null,
                    187
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 187,
                      "name": "_returnValues",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1816:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 185,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1816:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 186,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1816:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "_transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1900:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1927:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "_gasOverhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1950:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1976:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "_feeTokenRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2006:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 188,
                      "name": "_atomicExecuteMultipleMetaTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "1848:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bytes32_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory,uint256,uint256,address,uint256) returns (bytes32,bytes memory[] memory)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:181:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1813:216:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "_transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2058:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "id": 196,
                      "name": "_shouldRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2044:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory[] memory) view returns (bool)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 208,
                  "nodeType": "IfStatement",
                  "src": "2040:138:3",
                  "trueBody": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "2074:104:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "_startGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2099:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "_gasPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2110:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "_gasOverhead",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2121:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 203,
                              "name": "_feeTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "2135:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "_feeTokenRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2153:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 199,
                            "name": "_issueRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "2086:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,address,uint256)"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2086:81:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "2086:81:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 209,
                    "name": "_returnValues",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "2195:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "2188:20:3"
                }
              ]
            },
            "documentation": "@dev Execute multiple authKey meta transactions\n @param _transactions Arrays of transaction data ([destination, value, gasLimit, data][...]...)\n @param _gasPrice Gas price set by the user\n @param _gasOverhead Gas overhead of the transaction calculated offchain\n @param _feeTokenAddress Address of the token used to pay a fee\n @param _feeTokenRate Rate of the token (in tokenGasPrice/ethGasPrice) used to pay a fee\n @param _transactionMessageHashSignature Signed transaction data",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeMultipleAuthKeyMetaTransactions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "_transactions",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "867:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 133,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "867:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 134,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "867:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "905:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "_gasOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "932:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "_feeTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "962:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_feeTokenRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "996:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_transactionMessageHashSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1027:45:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "857:221:3"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1111:14:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 147,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1111:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 148,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1111:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:16:3"
            },
            "scope": 279,
            "src": "810:1405:3",
            "stateMutability": "nonpayable",
            "superFunction": 3294,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2728:175:3",
              "statements": [
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "name": "_authKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "2738:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2738:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "_transactionMessageHashSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "2789:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "_transactionMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "2757:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3788,
                      "src": "2757:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2757:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2738:84:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 228,
                            "name": "_authKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "2856:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 227,
                          "name": "_isValidAuthKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "2840:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2840:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "414b4d54413a2041757468206b657920697320696e76616c6964",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6760fbc2ce47a79e8b90e3f486e7e68710097a47a1c8cc0adeafbecdbbd6eee6",
                          "typeString": "literal_string \"AKMTA: Auth key is invalid\""
                        },
                        "value": "AKMTA: Auth key is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6760fbc2ce47a79e8b90e3f486e7e68710097a47a1c8cc0adeafbecdbbd6eee6",
                          "typeString": "literal_string \"AKMTA: Auth key is invalid\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11655,
                        11656
                      ],
                      "referencedDeclaration": 11656,
                      "src": "2832:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:64:3"
                }
              ]
            },
            "documentation": "@dev Validate signatures from an auth key meta transaction\n @param _transactionMessageHash Ethereum signed message of the transaction\n @param _transactionMessageHashSignature Signed transaction data\n @return Address of the auth key that signed the data",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAuthKeyMetaTransactionSigs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_transactionMessageHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2601:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "_transactionMessageHashSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2642:45:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2591:102:3"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:3"
            },
            "scope": 279,
            "src": "2547:356:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "3300:261:3",
              "statements": [
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "name": "_destination",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "3310:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3310:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3310:20:3"
                },
                {
                  "body": {
                    "id": 273,
                    "nodeType": "Block",
                    "src": "3387:145:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "_destination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "3402:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              null,
                              null,
                              null
                            ],
                            "id": 257,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3401:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$__$__$__$",
                              "typeString": "tuple(address,,,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "_transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 237,
                                  "src": "3444:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 261,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 260,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 246,
                                  "src": "3458:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3444:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 258,
                              "name": "_decodeTransactionData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "3421:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (address,uint256,uint256,bytes memory)"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3421:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(address,uint256,uint256,bytes memory)"
                            }
                          },
                          "src": "3401:60:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "3401:60:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3479:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 267,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11698,
                                "src": "3503:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                  "typeString": "contract AuthKeyMetaTxAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                  "typeString": "contract AuthKeyMetaTxAccount"
                                }
                              ],
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3495:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3479:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 272,
                        "nodeType": "IfStatement",
                        "src": "3475:46:3",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3517:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 241,
                          "id": 271,
                          "nodeType": "Return",
                          "src": "3510:11:3"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 249,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3356:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3360:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3360:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3356:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 274,
                  "initializationExpression": {
                    "assignments": [
                      246
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 246,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "3344:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3344:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 248,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3353:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3344:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3382:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "3382:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 255,
                    "nodeType": "ExpressionStatement",
                    "src": "3382:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3340:192:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3549:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 241,
                  "id": 276,
                  "nodeType": "Return",
                  "src": "3542:12:3"
                }
              ]
            },
            "documentation": "@dev Check whether a refund should be issued\n @notice A refund should not be issued if the account is performing an Authereum-related update\n @param _transactions Arrays of transaction data ([destination, value, gasLimit, data][...]...)\n @return True if a refund should be issued",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_shouldRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "_transactions",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3241:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 235,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3241:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 236,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3241:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3240:30:3"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3294:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3293:6:3"
            },
            "scope": 279,
            "src": "3218:343:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 280,
        "src": "223:3340:3"
      }
    ],
    "src": "0:3563:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/smitrajput/Projects/batchoo/contracts/account/AuthKeyMetaTxAccount.sol",
    "exportedSymbols": {
      "AuthKeyMetaTxAccount": [
        279
      ]
    },
    "id": 280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 128,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 129,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:3"
      },
      {
        "absolutePath": "/Users/smitrajput/Projects/batchoo/contracts/account/BaseMetaTxAccount.sol",
        "file": "./BaseMetaTxAccount.sol",
        "id": 130,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 875,
        "src": "59:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 131,
              "name": "BaseMetaTxAccount",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 874,
              "src": "256:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseMetaTxAccount_$874",
                "typeString": "contract BaseMetaTxAccount"
              }
            },
            "id": 132,
            "nodeType": "InheritanceSpecifier",
            "src": "256:17:3"
          }
        ],
        "contractDependencies": [
          549,
          874,
          1418,
          1437,
          1443,
          1483,
          1489,
          1502,
          3353,
          3400
        ],
        "contractKind": "contract",
        "documentation": "@title AuthKeyMetaTxAccount\n@author Authereum Labs, Inc.\n@dev Contract used by auth keys to send transactions.",
        "fullyImplemented": true,
        "id": 279,
        "linearizedBaseContracts": [
          279,
          874,
          549,
          1418,
          3353,
          3400,
          1443,
          1483,
          1437,
          1489,
          1502
        ],
        "name": "AuthKeyMetaTxAccount",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "1131:1084:3",
              "statements": [
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "name": "_startGas",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1141:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1141:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 153,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11645,
                      "src": "1161:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1141:29:3"
                },
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "name": "_transactionMessageHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1212:31:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1212:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 162,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11698,
                                    "src": "1288:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                      "typeString": "contract AuthKeyMetaTxAccount"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                      "typeString": "contract AuthKeyMetaTxAccount"
                                    }
                                  ],
                                  "id": 161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1280:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1280:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 164,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11652,
                                  "src": "1307:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sig",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1307:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 166,
                                  "name": "getChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 389,
                                  "src": "1328:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1328:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 168,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1499,
                                "src": "1354:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 169,
                                "name": "_transactions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "1373:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 170,
                                "name": "_gasPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "1400:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 171,
                                "name": "_gasOverhead",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139,
                                "src": "1423:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 172,
                                "name": "_feeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "1449:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 173,
                                "name": "_feeTokenRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1479:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 159,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11639,
                                "src": "1256:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1256:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1256:246:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 158,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11646,
                          "src": "1246:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:257:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3804,
                      "src": "1246:280:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:282:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1212:316:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_transactionMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1735:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "_transactionMessageHashSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "1760:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 179,
                      "name": "_validateAuthKeyMetaTransactionSigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "1686:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory) view"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:116:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:116:3"
                },
                {
                  "assignments": [
                    null,
                    187
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 187,
                      "name": "_returnValues",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "1816:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 185,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1816:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 186,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1816:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 189,
                        "name": "_transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1900:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1927:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "_gasOverhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1950:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1976:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 193,
                        "name": "_feeTokenRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2006:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 188,
                      "name": "_atomicExecuteMultipleMetaTransactions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "1848:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_bytes_memory_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bytes32_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory,uint256,uint256,address,uint256) returns (bytes32,bytes memory[] memory)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:181:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_array$_t_bytes_memory_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32,bytes memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1813:216:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "_transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2058:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "id": 196,
                      "name": "_shouldRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "2044:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes_memory_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes memory[] memory) view returns (bool)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 208,
                  "nodeType": "IfStatement",
                  "src": "2040:138:3",
                  "trueBody": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "2074:104:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "_startGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2099:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "_gasPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "2110:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "_gasOverhead",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2121:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 203,
                              "name": "_feeTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "2135:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "_feeTokenRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "2153:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 199,
                            "name": "_issueRefund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "2086:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,address,uint256)"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2086:81:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "2086:81:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 209,
                    "name": "_returnValues",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "2195:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "2188:20:3"
                }
              ]
            },
            "documentation": "@dev Execute multiple authKey meta transactions\n @param _transactions Arrays of transaction data ([destination, value, gasLimit, data][...]...)\n @param _gasPrice Gas price set by the user\n @param _gasOverhead Gas overhead of the transaction calculated offchain\n @param _feeTokenAddress Address of the token used to pay a fee\n @param _feeTokenRate Rate of the token (in tokenGasPrice/ethGasPrice) used to pay a fee\n @param _transactionMessageHashSignature Signed transaction data",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeMultipleAuthKeyMetaTransactions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "_transactions",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "867:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 133,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "867:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 134,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "867:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "905:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "_gasOverhead",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "932:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "_feeTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "962:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "_feeTokenRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "996:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_transactionMessageHashSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1027:45:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "857:221:3"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1111:14:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 147,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1111:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 148,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1111:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:16:3"
            },
            "scope": 279,
            "src": "810:1405:3",
            "stateMutability": "nonpayable",
            "superFunction": 3294,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2728:175:3",
              "statements": [
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "name": "_authKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "2738:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2738:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "_transactionMessageHashSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "2789:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "_transactionMessageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "2757:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3788,
                      "src": "2757:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2757:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2738:84:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 228,
                            "name": "_authKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "2856:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 227,
                          "name": "_isValidAuthKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "2840:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2840:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "414b4d54413a2041757468206b657920697320696e76616c6964",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2867:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6760fbc2ce47a79e8b90e3f486e7e68710097a47a1c8cc0adeafbecdbbd6eee6",
                          "typeString": "literal_string \"AKMTA: Auth key is invalid\""
                        },
                        "value": "AKMTA: Auth key is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6760fbc2ce47a79e8b90e3f486e7e68710097a47a1c8cc0adeafbecdbbd6eee6",
                          "typeString": "literal_string \"AKMTA: Auth key is invalid\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11655,
                        11656
                      ],
                      "referencedDeclaration": 11656,
                      "src": "2832:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2832:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:64:3"
                }
              ]
            },
            "documentation": "@dev Validate signatures from an auth key meta transaction\n @param _transactionMessageHash Ethereum signed message of the transaction\n @param _transactionMessageHashSignature Signed transaction data\n @return Address of the auth key that signed the data",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAuthKeyMetaTransactionSigs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_transactionMessageHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2601:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "_transactionMessageHashSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2642:45:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2591:102:3"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:0:3"
            },
            "scope": 279,
            "src": "2547:356:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "3300:261:3",
              "statements": [
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "name": "_destination",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "3310:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3310:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3310:20:3"
                },
                {
                  "body": {
                    "id": 273,
                    "nodeType": "Block",
                    "src": "3387:145:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "_destination",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "3402:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              null,
                              null,
                              null
                            ],
                            "id": 257,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3401:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$__$__$__$",
                              "typeString": "tuple(address,,,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "_transactions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 237,
                                  "src": "3444:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 261,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 260,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 246,
                                  "src": "3458:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3444:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 258,
                              "name": "_decodeTransactionData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "3421:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (address,uint256,uint256,bytes memory)"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3421:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(address,uint256,uint256,bytes memory)"
                            }
                          },
                          "src": "3401:60:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "3401:60:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3479:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 267,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11698,
                                "src": "3503:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                  "typeString": "contract AuthKeyMetaTxAccount"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AuthKeyMetaTxAccount_$279",
                                  "typeString": "contract AuthKeyMetaTxAccount"
                                }
                              ],
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3495:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3479:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 272,
                        "nodeType": "IfStatement",
                        "src": "3475:46:3",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3517:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 241,
                          "id": 271,
                          "nodeType": "Return",
                          "src": "3510:11:3"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 249,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "3356:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3360:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3360:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3356:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 274,
                  "initializationExpression": {
                    "assignments": [
                      246
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 246,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "3344:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3344:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 248,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3353:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3344:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3382:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "3382:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 255,
                    "nodeType": "ExpressionStatement",
                    "src": "3382:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3340:192:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3549:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 241,
                  "id": 276,
                  "nodeType": "Return",
                  "src": "3542:12:3"
                }
              ]
            },
            "documentation": "@dev Check whether a refund should be issued\n @notice A refund should not be issued if the account is performing an Authereum-related update\n @param _transactions Arrays of transaction data ([destination, value, gasLimit, data][...]...)\n @return True if a refund should be issued",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_shouldRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "_transactions",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3241:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 235,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3241:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 236,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3241:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3240:30:3"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3294:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3293:6:3"
            },
            "scope": 279,
            "src": "3218:343:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 280,
        "src": "223:3340:3"
      }
    ],
    "src": "0:3563:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-20T12:48:46.012Z",
  "devdoc": {
    "author": "Authereum Labs, Inc.",
    "details": "Contract used by auth keys to send transactions.",
    "methods": {
      "addAuthKey(address)": {
        "details": "Add an auth key to the list of auth keys",
        "params": {
          "_authKey": "Address of the auth key to add"
        }
      },
      "executeMultipleAuthKeyMetaTransactions(bytes[],uint256,uint256,address,uint256,bytes)": {
        "details": "Execute multiple authKey meta transactions",
        "params": {
          "_feeTokenAddress": "Address of the token used to pay a fee",
          "_feeTokenRate": "Rate of the token (in tokenGasPrice/ethGasPrice) used to pay a fee",
          "_gasOverhead": "Gas overhead of the transaction calculated offchain",
          "_gasPrice": "Gas price set by the user",
          "_transactionMessageHashSignature": "Signed transaction data",
          "_transactions": "Arrays of transaction data ([destination, value, gasLimit, data][...]...)"
        }
      },
      "executeMultipleMetaTransactions(bytes[])": {
        "details": "Execute multiple meta transactions",
        "params": {
          "_transactions": "Arrays of transaction data ([destination, value, gasLimit, data][...]...)"
        },
        "return": "The responses of the calls"
      },
      "getChainId()": {
        "details": "Get the chain ID constant",
        "return": "The chain id"
      },
      "initializeV1(address)": {
        "details": "Initialize the Authereum Account",
        "params": {
          "_authKey": "authKey that will own this account"
        }
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "details": "An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated. This function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s). This function MUST revert if it rejects the transfer(s). Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller. param _operator  The address which initiated the batch transfer (i.e. msg.sender) param _from      The address which previously owned the token param _ids       An array containing ids of each token being transferred (order and length must match _values array) param _values    An array containing amounts of each token being transferred (order and length must match _ids array) param _data      Additional data with no specified format",
        "return": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "The ERC721 smart contract calls this function on the recipient after a {IERC721-safeTransferFrom}. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onERC721Received.selector`. This function MAY throw to revert and reject the transfer. Note: the ERC721 contract address is always the message sender. param operator The address which called `safeTransferFrom` function param from The address which previously owned the token param tokenId The NFT identifier which is being transferred param data Additional data with no specified format",
        "return": "bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
      },
      "removeAuthKey(address)": {
        "details": "Remove an auth key from the list of auth keys",
        "params": {
          "_authKey": "Address of the auth key to remove"
        }
      }
    },
    "title": "AuthKeyMetaTxAccount"
  },
  "userdoc": {
    "methods": {
      "executeMultipleMetaTransactions(bytes[])": {
        "notice": "This can only be called by self as a part of the atomic meta transaction"
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "notice": "Handle the receipt of multiple ERC1155 token types."
      },
      "onERC1155Received(address,address,uint256,uint256,bytes)": {
        "notice": "ERC1155"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      }
    }
  }
}